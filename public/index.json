[
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/doc-hugo-en-cours/intro-hugo/",
	"title": "C&#39;est qui Hugo ?",
	"tags": [],
	"description": "Une rapide introduction à Hugo par son auteur",
	"content": " Source \u0026ldquo;Introduction to Hugo\u0026rdquo; par Steve Francia (auteur d\u0026rsquo;Hugo) - traduction en cours ouverte à toutes vos modifications.\n C’est Quoi Hugo ? Hugo est un framework de site Web généraliste. Techniquement parlant, Hugo est un générateur de site statique. Contrairement à d\u0026rsquo;autres systèmes qui créent dynamiquement une page chaque fois qu\u0026rsquo;un visiteur en fait la demande, Hugo lance la construction lorsque vous créez votre contenu. Étant donné que les sites Web sont affichés beaucoup plus souvent qu\u0026rsquo;ils ne sont édités, Hugo est optimisé pour l\u0026rsquo;affichage du site tout en offrant une excellente expérience d\u0026rsquo;écriture.\nLes sites construits avec Hugo sont extrêmement rapides et très sécurisés. Les sites Hugo peuvent être hébergés n\u0026rsquo;importe où, y compris chez Heroku, GoDaddy, DreamHost, GitHub Pages, Netlify, Surge , Aerobatic, Firebase Hosting, Google Cloud Storage, Amazon S3 et CloudFront, et fonctionnent bien avec les CDN. Les sites Hugo s\u0026rsquo;exécutent sans dépendances aux runtimes coûteuses comme Ruby, Python ou PHP et sans dépendances aux bases de données.\nNous pensons que Hugo est l\u0026rsquo;outil de création de site idéal. Avec des temps de construction presque instantanés et la possibilité de reconstruire à chaque fois qu\u0026rsquo;un changement est effectué, Hugo fournit une boucle de rétroaction très rapide. Ceci est essentiel lorsque vous concevez des sites Web, mais c\u0026rsquo;est aussi très utile lors de la création de contenu.\nQu\u0026rsquo;est-ce qui fait que Hugo est si différent ? Les générateurs de sites Web génèrent du contenu dans des fichiers HTML. La plupart sont des «générateurs de sites dynamiques». Cela signifie que le serveur HTTP (le programme exécuté sur votre site Web à qui parle le navigateur de l\u0026rsquo;utilisateur) lance le générateur pour créer un nouveau fichier HTML à chaque fois qu\u0026rsquo;un utilisateur souhaite afficher une page.\nCréer la page dynamiquement signifie que l\u0026rsquo;ordinateur hébergeant le serveur HTTP doit disposer d\u0026rsquo;une mémoire et d\u0026rsquo;une CPU suffisantes pour exécuter efficacement le générateur 24 heures sur 24. Sinon, l\u0026rsquo;utilisateur doit attendre dans la file pour générer la page.\nPersonne ne veut que les utilisateurs attendent plus longtemps que nécessaire, de sorte que les générateurs de sites dynamiques ont programmé leurs systèmes pour mettre en cache les fichiers HTML. Lorsqu\u0026rsquo;un fichier est mis en cache, une copie est stockée temporairement sur l\u0026rsquo;ordinateur. Pour le serveur HTTP c’est beaucoup plus rapide d’envoyer cette copie la prochaine fois que la page sera demandée plutôt que de la générer à partir de rien.\nHugo emmène cette notion de cache à un niveau plus haut. Tous les fichiers HTML sont restitués sur votre ordinateur. Vous pouvez consulter les fichiers avant de les copier sur l\u0026rsquo;ordinateur hébergeant le serveur HTTP. Étant donné que les fichiers HTML ne sont pas générés dynamiquement, nous disons que Hugo est un «générateur de site statique».\nIl y a de nombreux avantages à ne pas exécuter de générateur de site Web sur votre serveur HTTP. Le premier avantage et le plus remarquable, c’est la performance - les serveurs HTTP sont très bons pour envoyer des fichiers. Si bien que vous pouvez effectivement servir le même nombre de pages avec une fraction de la mémoire et de la CPU nécessaires pour un site dynamique.\nHugo a deux composants pour vous aider à construire et à tester votre site web. Celui que vous utiliserez probablement le plus souvent, c’est le serveur HTTP intégré. Lorsque vous lancez la commande hugo server, Hugo restitue tout votre contenu sous forme de fichiers HTML, puis exécute un serveur HTTP sur votre ordinateur afin que vous puissiez voir à quoi ressemblent les pages.\nLe deuxième composant est utilisé lorsque vous êtes prêt à publier votre site Web sur l\u0026rsquo;ordinateur qui exécute votre site Web. Exécuter Hugo sans aucune action reconstruira tout votre site Web en utilisant le paramètre baseURL réglé dans le fichier de configuration de votre site. Ceci est nécessaire afin que les liens de votre page fonctionnent correctement avec la plupart des hébergeurs.\nLa rapidité d’Hugo ? Une vidéo benchmark qui démontre la vélocité moteur\n Que fait Hugo ? En termes techniques, Hugo prend un dossier source de fichiers et de modèles, puis les utilise comme input à créer pour générer un site web complet.\nHugo a les caractéristiques suivantes :\nGénéral  Temps de construction extrêmement rapide (~1 ms par page) Ouvert sur toutes les plates-formes : fonctionne sur macOS, Linux, Windows, et plus encore ! Installation facile  Rendu des modification à la volée avec LiveReload pendant que vous développez Support complet des thèmes Héberge votre site n’importe où  Organisation  Organisation du contenu immédiate Support pour les sections de sites web URLs complètement personnalisables Support pour taxonomies configurables qui comprennent les catégories et tags. Créez votre propre organisation de contenu. Capacité à trier le contenu comme vous le désirez Génération de tables des matières automatique Création dynamique des menus Support pour de Jolies URLs Permalien pattern support Alias (redirectios)  Contenu  Support natif du contenu écrit en Markdown Support pour d\u0026rsquo;autres langages à travers des external helpers, voir formats supportés Support pour métadonnées TOML, YAML et JSON metadata dans le frontmatter Page d\u0026rsquo;accueil complètement personnalisable Support pour plusieurs types de contenus Résumés automatiques et définies par l\u0026rsquo;utilisateur Shortcodes pour permettre le contenu riche dans Markdown Fonctionnalité “Minutes to Read” “Compteur de mots” functionality  Fonctionnalités supplémentaires  Support commentaires Disqus intégré Support intégré des Google Analytics Création automatique de RSS creation Support pour les modèles HTML Go, Amber et Ace Enluminure de Syntaxe motorisée par Pygments  Regardez ce qui arrive bientôt dans la roadmap.\nQui devrait utiliser Hugo ? Hugo est conçu pour les personnes qui préfèrent écrire dans un éditeur de texte plutôt qu’un navigateur.\nHugo est conçu pour les personnes qui veulent colder à la main leur propre site web sans se soucier de runtimes, dépendances et bases de données compliquées.\nHugo est conçu pour les personnes qui veulent construire un blog, un portfolio, un tumblog, une documentation, un site avec une page unique ou un site avec des milliers de pages.\nPourquoi avoir écrit Hugo ? J\u0026rsquo;ai écrit Hugo en fin de compte pour plusieurs raisons. Tout d\u0026rsquo;abord, j\u0026rsquo;ai été déçu par WordPress, ma solution de site Web d’alors. Avec WordPress, je ne pouvais pas créer de contenu aussi efficace que je le voulais. Il était trop lent en production. Il m’obligeait à être en ligne pour écrire des messages : en outre, ses mises à jour de sécurité constantes et les histoires horribles de blogs piratés ! Je détestais comment le contenu pour WordPress n’était écrit qu\u0026rsquo;en HTML, au lieu du Markdown beaucoup plus simple. Dans l\u0026rsquo;ensemble, j\u0026rsquo;avais l\u0026rsquo;impression que WordPress me barrait plus le chemin qu’il ne m’aidait. Il m\u0026rsquo;a empêché d\u0026rsquo;écrire du contenu formidable.\nJ\u0026rsquo;ai regardé les générateurs de sites statiques existants comme Jekyll, Middleman et Nanoc. Tous avaient des dépendances d\u0026rsquo;installation compliquées et prenaient bien plus de temps pour produire mon blog avec ses centaines de messages que ce que je sentais comme acceptable. Je voulais un framework capable de me donner des feedbacks rapides tout en produisant des modifications aux modèles, et les temps de rendu de 5 minutes et + étaient tout simplement beaucoup trop lents. En général, WordPress était très orienté blog et n’avait pas la capacité de fournir d\u0026rsquo;autres types de contenu et des URL flexibles.\nJe voulais développer un framework de site Web rapide et complet sans aucune dépendance. Le langage Go  semblait disposait de toutes les fonctionnalités dont j\u0026rsquo;avais besoin dans un langage. J\u0026rsquo;ai commencé à développer Hugo dans Go et suis tombé amoureux du langage. J\u0026rsquo;espère que vous tirerez autant de plaisir de pouvoir utiliser Hugo (et y contribuer) autant que je n\u0026rsquo;en ai eu en l\u0026rsquo;ayant écrit.\n—Steve Francia (@spf13)\nProchaines étapes  Installer Hugo et le thème docDock\n Démarrage rapide si vous êtes perdu.e\n Rejoignez la liste de discussion\n Star us on GitHub\n Forum de discussion\n  "
},
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/doc-hugo-en-cours/",
	"title": "Documentation Hugo",
	"tags": [],
	"description": "Un aperçu global pour démarrer rapidement sur Hugo",
	"content": " Étude en cours Attention, cette section ne fait pas partie directement de la doc officielle de DocDock. Volonté ici de lister au fil de l\u0026rsquo;eau les pages m\u0026rsquo;ayant aidé et pouvant servir de mémo pour mes premiers pas dans le moteur GoHugo.\nPour le moment, la liste se limite à une première ébauche de traduction des premières pages de l\u0026rsquo;excellente documentation officielle d\u0026rsquo;Hugo. Besoin d\u0026rsquo;aide pour démarrer et de pratiquer au jour le jour l\u0026rsquo;architecture versatile de l\u0026rsquo;organisation de contenus dans le thème docDock.\nSi vous avez d\u0026rsquo;autres liens à recommander, je reste preneur. -\nxtof\n   C\u0026#39;est qui Hugo ?  Une rapide introduction à Hugo par son auteur\n Hugo QuickStart  Avant de se lancer dans la construction d\u0026#39;une documentation... un guide simple pour créer une bibliothèque en ligne.\n Installer Hugo  Comment installer Hugo sur votre machine.\n Utiliser Hugo  .\n "
},
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/",
	"title": "Démarrage",
	"tags": [],
	"description": "",
	"content": " Pré-requis Téléchargez la binaire Hugo pour votre OS (Windows, Linux, Mac) : vraiment simple.\n Documentation Hugo  Un aperçu global pour démarrer rapidement sur Hugo\n Installation  \n Configuration  \n "
},
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "HUGO v0.22 est la version minimum requise pour utiliser ce thème Les étapes suivantes sont là pour vous aider à initialiser votre nouveau site web. Si vous ne connaissez pas du tout Hugo, nous vous suggérons vraiment de vous entraîner en suivant cette doc géniale pour les débutants Créez votre Documentation Hugo fournit une commande new pour créer un nouveau site web.\n$ hugo new site \u0026lt;votre_nouveau_site_web\u0026gt;  Installez Le Thème Installez le thème Hugo-theme-docdock en suivant ces instructions :\nRendez-vous à l\u0026rsquo;intérieur du dossier themes et téléchargez le thème\n$ cd themes $ git clone https://github.com/vjeantet/hugo-theme-docdock.git docdock  Autre alternative, vous pouvez  télécharger le thème sous forme de fichier .zip et l\u0026rsquo;extraire dans le dossier themes\nConfiguration Basique Suivez les instructions ici\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": "Au moment de construire le site web, vous pouvez régler un thème en utilisant l\u0026rsquo;option --theme. Nous vous suggérons de modifier votre fichier de configuration et de régler le thème par défaut. Exemple avec le format config.toml. theme = \u0026quot;docdock\u0026quot;  Génération de l\u0026rsquo;Index de Recherche Ajoutez la ligne suivante dan le même fichier config.toml.\n[outputs] home = [ \u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot;]  Le fichier d\u0026rsquo;index de recherche LUNRJS sera généré sur les modifications récentes.\nLe Contenu de votre Site Web Découvrez comment créer et organiser votre contenu rapidement et intuitivement.\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/doc-hugo-en-cours/quickstart/",
	"title": "Hugo QuickStart",
	"tags": [],
	"description": "Avant de se lancer dans la construction d&#39;une documentation... un guide simple pour créer une bibliothèque en ligne.",
	"content": " Source originale\nConstruire une Bibliothèque Dans ce guide de démarrage, nous allons construire une bibliothèque qui listera les livres et leurs critiques.\n Note : Ce guide dépend de fonctionnalités présentées dans la version Hugo v0.15. Si vous avez une version précédente d\u0026rsquo;Hugo, mettez à jour avant de démarrer.\n Étape 1. Installer Hugo Foncez sur les Hugo Releases et téléchargez la version qui correspondra à votre système d\u0026rsquo;exploitation et à votre architecture.\nSauvegardez l\u0026rsquo;exécutable choisi sous hugo (ou hugo.exe sur Windows) quelque part dans votre PATH car nous devrons l\u0026rsquo;utiliser pour la prochaine étape.\nDes instructions plus détaillées sont disponibles sur Installing Hugo. (NDT à traduire)\nSi vous êtes sous Windows, ce guide de démarrage suppose que vous utilisez Git Bash (aussi connu comme Git pour Windows). Par conséquent, toutes les commandes démarreront avec le caractère d\u0026rsquo;invitation Bash (qui est $).\nUne fois installé hugo, assurez-vous de lancer la commande help afin de vérifier l\u0026rsquo;installation de hugo. Ci-dessous, vous pouvez voir une partie traduite de l\u0026rsquo;output de la commande help.\n$ hugo help hugo c'est la commande principale, utilisée pour construire votre site Hugo. Hugo est un Générateur de Site Statique (GSS) Rapide et Flexible construit avec amour par spf13 et ses amis en Go. Une documentation complète est disponible sur http://gohugo.io/.  Vous pouvez vérifier la version de hugo en utilisant la commande en dessous.\n$ hugo version Hugo Static Site Generator v0.15 BuildDate: 2015-11-26T11:59:00+05:30  Étape 2. Échafaudez le site de la Bibliothèque avec Hugo Hugo dispose de commmandes qui nous permettent d\u0026rsquo;échafauder rapidement un site web géré avec Hugo. Naviguez vers un endroit qui vous plaira sur votre système de fichiers, et créez un nouveau site bibliotheque en exécutant la commande qui suit :\n$ hugo new site bibliotheque  Changez de répertoire vers bibliotheque\n$ cd bibliotheque  lancez la commande tree -a pour visualiser l\u0026rsquo;arbre de votre répertoire :\n$ tree -a . ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes 6 directories, 2 files  Comme précisé dans la commande, le dossier bibliotheque comprend 6 sous-dossiers et 2 fichiers. Jetons un oeil à chacun d\u0026rsquo;eux.\n archetypes : Vous pouvez créer de nouveaux fichiers de contenu dans Hugo en utilisant la commande hugo new. Quand vous lancez cette commande, elle ajoute de nouvelles propriétés de configuration au post comme la date et le titre. L\u0026rsquo;archétype vous permet de définir vos propres propriétés de configuration qui seront ajoutées à l\u0026rsquo;en-tête (front matter) de votre post à chaque fois que la commande hugo new sera utilisée. config.toml : Chaque site web devrait avoir un fichier de configuration à sa racine. Par défaut, le fichier de configuration utilise le format TOML mais vous pouvez aussi utiliser tout aussi bien les formats YAML ou JSON. TOML est le format minimal de fichier de configuration qui reste facile à lire. Les réglages de configuration cités dans le config.toml s\u0026rsquo;appliquent à l\u0026rsquo;ensemble du site. Ces réglages de configuration comprennent les URLs de base et titre (baseURL et title) du site web. content : C\u0026rsquo;est là où vous stockerez le contenu du site web. Dans le dossier content, vous créerez des sous-répertoires pour différentes sections. Supposons que votre site web dispose de trois sections – blog, articles et tutoriel. Vous aurez alors trois dossiers de sections différentes pour chacune d\u0026rsquo;entre elles à l\u0026rsquo;intérieur du dossier content. Le nom de la section, à savoir blog, articles, ou tutoriel sera utilisé par Hugo pour s\u0026rsquo;appliquer à une mise en page (layout) spécifique applicable à cette section. data : Ce dossier est utilisé pour stocker les fichiers de configuration pouvant être utilisés par Hugo au moment de générer votre site web. Vous pouvez écrire ces fichiers en format YAML, JSON, ou TOML. layouts : Le contenu dans ce dossier est utilisé pour spécifier comment votre contenu sera converti à l\u0026rsquo;intérieur du site web statique. static : Ce dossier s\u0026rsquo;utilise pour stocker tout le contenu statique dont aura besoin votre site web comme des images, CSS, JavaScript ou tout autre contenu statique. themes : C\u0026rsquo;est l\u0026rsquo;endroit où vous stockerez les thèmes utilisés par votre site. Les thèmes fournissent la mise en page et les modèles qui restituent le contenu. Il existe une grande variété de thèmes open-source disponibles que vous vous pouvez télécharger et utiliser mais rien ne vous empêche de créer le vôtre.  Étape 3. Ajouter du Contenu Ajoutons maintenant un post à notre site bibliotheque. Nous utiliserons la commande hugo new pour ajouter un post. En janvier, j\u0026rsquo;ai lu le livre Good To Great, aussi nous commencerons par la création d\u0026rsquo;un billet pour ce livre. Assurez-vous de bien être dans le dossier bibliotheque.\n$ hugo new post/good-to-great.md /Users/xtof/Sites/Tuto-Quickstart-Hugo/bibliotheque/content/post/good-to-great.md created  La commande au-dessus crée un nouveau dossier post à l\u0026rsquo;intérieur du dossier bibliotheque/content et crée à l\u0026rsquo;intérieur un fichier good-to-great.md.\n$ tree -a content content └── post └── good-to-great.md 1 directory, 1 file  Le contenu à l\u0026rsquo;intérieur du fichier good-to-great.md ressemble à ce qui s\u0026rsquo;affiche en dessous :\n--- title: \u0026quot;Good To Great\u0026quot; date: 2017-07-01T14:31:19+02:00 draft: true ---  Le contenu placé entre les signes +++ est la configuration TOML du billet. Cette configuration s\u0026rsquo;appelle le front matter. Il vous permet de définir la configuration de votre billet avec son contenu. Par défaut, chaque billet aura les trois propriétés de configuration présentées au-dessus.\n title spécifie le titre du billet. date spécifie la date et l\u0026rsquo;horaire à laquelle le billet a été créé. draft spécifie que ce post n\u0026rsquo;est pas prêt pour la publication, il n\u0026rsquo;apparaîtra donc pas dans le fichier généré.  Ajoutons une petite critque pour le livre Good to Great :\n--- title: \u0026quot;Good To Great\u0026quot; date: 2017-07-01T14:31:19+02:00 draft: true --- J'ai lu **Good to Great en janvier 2016**. Une analyse merveilleuse décrivant avec acuité comment les grandes sociétés enchantent le monde.  Étape 4. Servir le contenu Hugo a un serveur intégré qui peut servir le contenu de votre site web afin que vous puissiez le prévisualiser. Vous pouvez aussi utiliser le serveur intégré d\u0026rsquo;Hugo en production. Pour servir le contenu, lancez la commande suivante à l\u0026rsquo;intérieur de votre répertoire bibliotheque :\n$ hugo server Started building sites ... Built site for language en: 0 of 1 draft rendered 0 future content 0 expired content 0 regular pages created 6 other pages created 0 non-page files copied 0 paginator pages created 0 tags created 0 categories created total in 14 ms Watching for changes in /Users/xtof Sites/Tuto-Quickstart-Hugo/bibliotheque {data,content,layouts,static} Serving pages from memory Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop  Cette commande lancera le serveur sur le port port 1313. Vous pourrez regarder votre blog à l\u0026rsquo;adresse http://localhost:1313/. Vous allez sur le lien et ne verrez rien ! Deux raisons à cela :\n Comme vous pouvez le voir dans la sortie de commande hugo server, Hugo n\u0026rsquo;a pas produit le draf. Hugo ne produira les drafts (ébauches) que si vous passez le flag buildDrafts sur la commande hugo server. Nous n\u0026rsquo;avons pas spécifié comment le contenu Markdown devrait être produit. Nous devons spécifier un thème à utiliser par Huto. Nous ferons ça à l\u0026rsquo;étape suivante.  Pour produire les drafts (ébauches), relancez le serveur avec la commande ci-dessous :\n`$ hugo server --buildDrafts Started building sites ... Built site for language en: 1 of 1 draft rendered 0 future content 0 expired content 1 regular pages created 8 other pages created 0 non-page files copied 0 paginator pages created 0 tags created 0 categories created total in 6 ms Watching for changes in /Users/xtof/Sites/Tuto-Quickstart-Hugo/bibliotheque/{data,content,layouts,static} Serving pages from memory Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop  Si vous tapez l\u0026rsquo;adresse http://localhost:1313/, vous ne verrez encore ein car nous n\u0026rsquo;avons pas toujours spécifié de thème à utiliser par Hugo.\nÉtape 5. Ajoutez un thème Les thèmes fournissent la mise en page et les modèles qui seront utilisés par Hugo pour la production de votre site Web. Il existe de nombreux thèmes open-source disponibles que vous pouvez utiliser sur https://themes.gohugo.io/.\n Hugo n\u0026rsquo;est toujours pas livré à ce jour avec un thème default, permettant à l\u0026rsquo;utilisateur de choisir le thème qui conviendra le mieux à son projet.\n Les thèmes doivent être ajoutés dans le dossier themes à l\u0026rsquo;intérieur de la racine de votre dossier.\nLancez la commande :\n$ cd themes  Désormais, vous pouvez cloner un ou plusieurs thèmes à l\u0026rsquo;intérieur de votre dossier themes. Nous utiliserons ici le thème robust, mais avec un point d\u0026rsquo;arrêt (dans son historique) qui fonctionne pour ce guide de démarrage rapide.\n$ git clone https://github.com/dim0627/hugo_theme_robust.git $ (cd hugo_theme_robust; git checkout b8ce466)  Oubliez les détails pour le moment de la fenêtre du terminal et quittez le dossier themes.\nLancez la commande :\n$ cd ..  Redémarrez le serveur\n$ hugo server --theme=hugo_theme_robust --buildDrafts Started building sites ... Built site for language en: 1 of 1 draft rendered 0 future content 0 expired content 1 regular pages created 8 other pages created 0 non-page files copied 2 paginator pages created 0 tags created 0 categories created total in 8 ms Watching for changes in /Users/xtof/Sites/Tuto-Quickstart-Hugo/bibliotheque/{data,content,layouts,static,themes} Serving pages from memory Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop   Note : Si Hugo ne trouve pas le thème spécifié dans le dossier themes, il lancera une exception comme affiché en-dessous.\nFATAL: 2016/02/14 Unable to find theme Directory: /Users/xtof/bibliotheque/themes/robust   Pour voir votre site web, rendez-vous maintenant sur http://localhost:1313/. Vous verrez ce qui s\u0026rsquo;affiche ci-dessous.\nEssayons de comprendre la mise en forme du thème. Un thème comporte les éléments suivants :\n theme.toml est le fichier de configuration du thème qui vous donne l\u0026rsquo;information sur le thème comme le nom et la description du thème, les détails de l\u0026rsquo;auteur et la licence du thème. images est un dossier qui comprend deux images – screenshot.png et tn.png. screenshot.png est l\u0026rsquo;image de la vue en liste et tn.png est la visualisation d\u0026rsquo;eun billet unique.. layouts est le dossier qui contient difféentes vues pour différents types de contenus. Chaque type de contenu devrait avoir deux fichiers single.html et list.html. single.html s\u0026rsquo;utilise pour produire un morceau unique de contenu. list.html s\u0026rsquo;utilise pour visualiser une liste d\u0026rsquo;items de contenus. Par exemple, vous utilisez list.html pour voir tous les posts qui ont le tag programmation. static est le dossier qui stocke tous les actifs statiques utilisés par le modèle. Les bibliothèques JavaScript comme jQuery ou les styles CSS ou les images, ou tout autre contenu statique. Ce dossier sera copié à l\u0026rsquo;intérieur du site final au moment de la production.  Étape 6. Utilisez plusieurs thèmes Vous pouvez facilement tester différentes configurations en alternant entre différents thèmes. Supposons que nous voulions essayer le thème bleak. Nous clonons le thème bleak dans le répertoire bibliotheque/themes.\nReplacez-vous dans le dossier themes\ncd themes  Et clonez le thème bleak :\n$ git clone https://github.com/Zenithar/hugo-theme-bleak.git  Redémarrez le serveur en utilisant le thème hugo-theme-bleak comme affiché ci-dessous\n$ cd .. $ hugo server --theme=hugo-theme-bleak --buildDrafts  Désormais, le site web utilise le thème bleak et s\u0026rsquo;affiche différemment comme ci-dessous\nÉtape 7. Mise à jour de config.toml et rechargement live en action Maintenant, arrêtez si besoin (Ctrl + C) pour redémarrer le serveur avec le thème robust, car nous allons l\u0026rsquo;utiliser pour ce guide démarrage rapide.\n$ hugo server --theme=hugo_theme_robust --buildDrafts  Le site web utilise les valeurs stupides spécifiées dans le fichier de configuration bibliotheque/config.toml. Mettons à jour la configuration.\nbaseURL = \u0026quot;http://exemple.org/\u0026quot; languageCode = \u0026quot;fr-fr\u0026quot; title = \u0026quot;Critiques de Livres par Shekhar Gulati\u0026quot; [Params] Author = \u0026quot;Shekhar Gulati\u0026quot;  Hugo supporte le rechargement en live. Par conséquent, dès que nous sauvegardons nos modifications, elles s\u0026rsquo;appliqueront et rechargeront la page web. Vous verrez les modifications s\u0026rsquo;afficher en dessous.\nOutre la visualisation, vous retrouverez la même chose renvoyée dans les journaux du serveur Hugo. Dès que vous avez modifié le fichier de configuration, Hugo a appliqué ces modifications aux pages concernées\nConfig file changed: /Users/xtof/Sites/Tuto-Quickstart-Hugo/bibliotheque/config.toml Started building sites ... Built site for language en: 1 of 1 draft rendered 0 future content 0 expired content 1 regular pages created 8 other pages created 0 non-page files copied 2 paginator pages created 0 tags created 0 categories created total in 24 ms  Étape 8. Personnaliser le thème robust Le thème robust est un bon départ pour notre bibliothèque en ligne mais nous voulons le personnaliser afin de le rapprocher de nos besoins pour une bibliothèque. Hugo facilite la personnalisation des thèmes. Vous pouvez aussi créer vos propres thèmes, mais nous ne le ferons pas aujourd\u0026rsquo;hui. Si vous souhaitez créer votre propre thème, vous devriez vous référer à la documentation Hugo documentation.\nLa première modification à produire, c\u0026rsquo;est d\u0026rsquo;utiliser une image par défaut différente de celle utilisée dans le thème. L\u0026rsquo;image par défaut du thème utilisée dans la liste et de la page de visualisation unique se trouve à l\u0026rsquo;intérieur de themes/hugo_theme_robust/static/images/default.jpg. Nous pouvons facilement l\u0026rsquo;annuler en créant une structure de répertoire simple dans le répertoire static du dossier.\nCréez un dossier imagesdans le répertoire bibliotheque/static et copiez une image avec le nom default.jpg. Nous utiliserons par défaut l\u0026rsquo;image affichée en dessous.\nHugo synchronisera les modifications et rechargera le site web pour utiliser cette nouvelle image comme affichée en dessous.\nMaintenant, nous devons modifier le layout de la page index afin que seules les images soient affichées au lieu du texte. Le fichier index.html dans le dossier layouts du thème fait référence au partiel li qui produit la vue en liste ci-dessous.\n\u0026lt;article class=\u0026quot;li\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;\u0026quot; class=\u0026quot;clearfix\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;image\u0026quot; style=\u0026quot;background-image: url({{ $.Site.BaseURL }}images/{{ with .Params.image }}{{ . }}{{ else }}default.jpg{{ end }});\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;detail\u0026quot;\u0026gt; \u0026lt;time\u0026gt;{{ with .Site.Params.DateForm }}{{ $.Date.Format . }}{{ else }}{{ $.Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}{{ end }}\u0026lt;/time\u0026gt; \u0026lt;h2 class=\u0026quot;title\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026quot;summary\u0026quot;\u0026gt;{{ .Summary }}\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/article\u0026gt;  Créez un nouveau fichier li.html à l\u0026rsquo;intérieur du dossier bibliotheque/layouts/_default. Copiez le contenu affiché en dessous dans le fichier li.html. Nous y avons enlevé les détails du livre, aussi seule l\u0026rsquo;image s\u0026rsquo;affiche.\n\u0026lt;article class=\u0026quot;li\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;\u0026quot; class=\u0026quot;clearfix\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;image\u0026quot; style=\u0026quot;background-image: url({{ $.Site.BaseURL }}images/{{ with .Params.image }}{{ . }}{{ else }}default.jpg{{ end }});\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/article\u0026gt;  Maintenant, le site web ressemblera à ce qui s\u0026rsquo;affiche en-desous\nEnsuite, nous voulons retirer l\u0026rsquo;information présente en pied de page conceranant le thème. Pour faire ainsi, créez un nouveau dossier partials à l\u0026rsquo;intérieur de bibliotheque/layouts. Dans ce dossier, créez un nouveau fichier, default_foot.html avec le contenu copié à partir du layouts/partials/default_foot.html du thème. Remplacez la section footer avec celle en dessous.\n \u0026lt;footer class=\u0026quot;site\u0026quot;\u0026gt; \u0026lt;p\u0026gt;{{ with .Site.Copyright | safeHTML }}{{ . }}{{ else }}\u0026amp;copy; {{ $.Site.LastChange.Year }} {{ if isset $.Site.Params \u0026quot;Author\u0026quot; }}{{ $.Site.Params.Author }}{{ else }}{{ .Site.Title }}{{ end }}{{ end }}\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Motorisé par \u0026lt;a href=\u0026quot;http://gohugo.io\u0026quot; target=\u0026quot;_blank\u0026quot; rel=\u0026quot;nofollow\u0026quot;\u0026gt;Hugo\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/footer\u0026gt;  Nous devons aussi enlever la barre latérale à droite. Copiez le fichier index.html dans le dossier layouts du thème vers le dossier bibliotheque/layouts. Retirez la section en rapport avec la barre latérale du HTML :\n\u0026lt;div class=\u0026quot;col-sm-3\u0026quot;\u0026gt; {{ partial \u0026quot;sidebar.html\u0026quot; . }} \u0026lt;/div\u0026gt;  À ce stade, nous utilisons l\u0026rsquo;image par défaut, mais nous aimerions utiliser l\u0026rsquo;image du livre que nous pourrions relier au livre. Chaque critique de livre définira un réglage de configuration dans son front matter. Mettez à jour l\u0026rsquo;article good-to-great.md comme indiqué ci-dessous.\n+++ date = \u0026quot;2017-07-01T16:11:58+05:30\u0026quot; draft = true title = \u0026quot;Good to Great Book Review\u0026quot; image = \u0026quot;good-to-great.jpg\u0026quot; +++ J'ai lu **Good to Great en janvier 2016**. Une analyse merveilleuse décrivant avec acuité comment les grandes sociétés enchantent le monde.  Piquez quelque part (légal SVP) une image, appelez-la good-to-great.jpg, et placez-la dans le dossier bibliotheque/static/images.\nAprès avoir ajouté quelques autres livres à notre étagère de bibliothèque, voic à quoi ressemble l\u0026rsquo;ensemble. Quelques livres que j\u0026rsquo;ai lus durant l\u0026rsquo;année.\nÉtape 9. Rendre les posts publics À ce stade, tous les posts que nous avons écrits sont en statut draft (ébauche). Afin de faire qu\u0026rsquo;un draft soit public, vous pouvez soit lancer une commande ou modifier manuellement le statut draft dans le post en false.\nLancez la commande\n$ hugo undraft content/post/good-to-great.md  Maintenant, vous pouvez lancer le serveur sans l\u0026rsquo;option buildDrafts.\n$ hugo server --theme=hugo_theme_robust  Disqus vous permet d\u0026rsquo;intégrer des commentaires dans votre blog statique. Pour activer Disqus, il suffit de définir disqusShortname dans votre fichier de configuration `config.toml comme indiqué ci-dessous.\n[Params] Author = \u0026quot;votre prenom et nom\u0026quot; disqusShortname = \u0026lt;votre nomutilisateur Disqus\u0026gt;  Maintenant, le commentaire sera activé sur votre blog.\nÉtape 11. Générer le Site Web Pour générer la source du site web Hugo, vous pouvez utiliser pour déployer votre site web le service GitHub Pages. Modifiez d\u0026rsquo;abord dans votre fichier de configuration bibliotheque/config.toml, la ligne baseURL en :\nbaseURL = \u0026quot;https://\u0026lt;votre nomutilisateur GitHub\u0026gt;.github.io/bibliotheque/\u0026quot;  Puis lancez la commande suivante.\n$ hugo --theme=hugo_theme_robust Started building sites ... Built site for language en: 0 draft content 0 future content 0 expired content 1 regular pages created 8 other pages created 0 non-page files copied 2 paginator pages created 0 tags created 0 categories created total in 10 ms  Après avoir lancé la commande hugo, un répertoire bibliotheque/public est créé contenant la source du site web généré.\nP.S. En passant, (si vous avez essayé), le site web n\u0026rsquo;est pas accessible proprement via le protocole file:///.\nÉtape 12. Déployez le site bibliotheque sur GitHub pages Lançons le contôle de version de votre bibliotheque :\n$ git init $ echo \u0026quot;/public/\u0026quot; \u0026gt;\u0026gt; .gitignore $ echo \u0026quot;/themes/\u0026quot; \u0026gt;\u0026gt; .gitignore $ git add --all $ git commit -m \u0026quot;Initial commit\u0026quot;  Maintenant les repos Git sous bibliotheque/themes ne rentreront plus en conflit avec votre repo bibliotheque, et c\u0026rsquo;est aussi le cas pour un repo Git dans bibliotheque/public.\nCréez un nouveau repository sur GitHub appelé bibliotheque (sans README). Une fois que c\u0026rsquo;est fait, créez un nouveau repo Git sur votre système local dans bibliotheque/public et ajoutez remote :\n$ cd public $ git init $ git remote add origin git@github.com:\u0026lt;votre-nomutilisateur-github\u0026gt;/bibliotheque.git  Puis créez et checkout une nouvelle branche gh-pages\n$ git checkout -b gh-pages Switched to a new branch 'gh-pages'  Ajoutez tous les fichiers (dans bibliotheque/public) à l\u0026rsquo;index, commitez-les, et poussez les modifications sur GitHub.\n$ git add --all $ git commit -m \u0026quot;bibliotheque added\u0026quot; $ git push -f origin gh-pages  Dans quelques minutes, votre site web sera vivant sur https://\u0026lt;github-nomutilisateur\u0026gt;.github.io/bibliotheque/.\nA tout moment, vous pouvez régénérer votre site avec :\n$ (cd ..; hugo --theme=hugo_theme_robust) $ git add --all $ git commit -m \u0026quot;\u0026lt;some change message\u0026gt;\u0026quot; $ git push -f origin gh-pages  Ce tutoriel rapide a été initialement écrit par Shekhar Gulati dans sa série de blog 52 Technologies in 2016.\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/doc-hugo-en-cours/installer-hugo/",
	"title": "Installer Hugo",
	"tags": [],
	"description": "Comment installer Hugo sur votre machine.",
	"content": " Source \u0026ldquo;Installing Hugo - documentation officielle Hugo, demeurant le seul lien de référence.\n Hugo est écrit en Go avec le support de nombreuses plates-formes.\nLa dernière version peut être trouvée sur Hugo Releases. Nous proposons actuellement des binaires pré-construits pour  Windows,  Linux, FreeBSD et  OS X (Darwin) pour les architectures x64, i386 et ARM.\nHugo peut également être compilé à partir de la source partout où la chaîne d\u0026rsquo;outils du compilateur Go peut s\u0026rsquo;exécuter, par ex. pour d\u0026rsquo;autres systèmes d\u0026rsquo;exploitation comme DragonFly BSD, OpenBSD, Plan 9 et Solaris. Voir http://golang.org/doc/install/source pour l\u0026rsquo;ensemble complet des combinaisons prises en charge des systèmes d\u0026rsquo;exploitation cibles et des architectures de compilation.\nInstaller Hugo (binaire) L\u0026rsquo;installation est très simple. Téléchargez simplement la version appropriée pour votre plate-forme à partir de Hugo Releases. Une fois téléchargé, Hugo peut être exécuté à partir de n\u0026rsquo;importe où. Vous n\u0026rsquo;avez pas besoin de l\u0026rsquo;installer dans un emplacement global. Cela fonctionne bien pour les hôtes partagés et d\u0026rsquo;autres systèmes où vous n\u0026rsquo;avez pas de compte privilégié.\nIdéalement, vous devriez l\u0026rsquo;installer quelque part dans votre PATH pour une utilisation facile. /usr/local/bin est l\u0026rsquo;emplacement le plus probable.\nSur MacOS, si vous avez Homebrew, l\u0026rsquo;installation est encore plus simple : il suffit d\u0026rsquo;exécuter brew install hugo.\nPour une explication plus détaillée, suivez les guides d\u0026rsquo;installation correspondants :\nInstaller Pygments (facultatif) L\u0026rsquo;exécutable Hugo a une dépendance externe facultative pour l\u0026rsquo;enluminure du code source (Pygments).\nSi vous voulez disposer de la mise en beauté du code source en utilisant le racccourci-code hightlight, vous devrez installer le programme Pygments basé sur Python. La procédure est décrite sur la page d\u0026rsquo;accueil Pygments.\nMettre à jour Hugo Mettre à jour Hugo est aussi facile que de télécharger et remplacer l\u0026rsquo;exécutable que vous avez posé dans votre PATH.\nSur macOS, si vous avez Homebrew, mettre à jour est encore plus facile : lancez simplement la commande brew upgrade hugo.\nInstaller Hugo sur Linux à partir de pacakages natifs Arch Linux Vous pouvez installer Hugo à partir du repo Arch user sur Arch Linux ou des dérivés tels que Manjaro.\nsudo pacman -S yaourt yaourt -S hugo  Soyez conscients que Hugo est construit à partir de la source. Ce qui veut dire que des outils complémentaires comme Git et Go seront tout aussi bien installés.\nDebian et Ubuntu Hugo a été inclus dans Debian et Ubuntu depuis 2016, et par conséquent, installer Hugo est aussi simple que :\nsudo apt install hugo  Pros :\n Native Debian/Ubuntu package maintained by Debian Developers Pre-installed bash completion script and man pages for best interactive experience  Cons :\n Might not be the latest version, especially if you are using an older stable version (e.g., Ubuntu 16.04 LTS). Until backports and PPA are available, you may consider installing the Hugo snap package to get the latest version of Hugo, as described below.  Fedora, CentOS et Red Hat Voir aussi cette discussion.\nMéthodes d\u0026rsquo;Installation Alternatives Snap Package Dans n\u0026rsquo;importe lesquelles des distributions Linux qui supporent snap:\nsnap install hugo   Note : Hugo-as-a-snap can write only inside the user\u0026rsquo;s $HOME directory—and gvfs-mounted directories owned by the user—because of Snaps\u0026rsquo; confinement and security model. More information is also available in this related GitHub issue.\n Image Docker (non officiel) Docker Hugo est une image Docker qui peut s\u0026rsquo;utiliser pour du développement local mais plus important, elle peut être utilisée aisément pour des builds d\u0026rsquo;intégration continue de votre site Hugo sur CircleCI ou Travis CI. Source disponible sur GitHub.\nInstaller à partir de la source Outils pré-requis pour télécharger et construire le code source Dépendances de vendeurs Hugo uses govendor to vendor dependencies, but we don\u0026rsquo;t commit the vendored packages themselves to the Hugo git repository. Therefore, a simple go get is not supported since go get is not vendor-aware. You must use govendor to fetch Hugo\u0026rsquo;s dependencies.\nRécupérer à partir de GitHub The commands below assume that you have [Go](https://golang.org/dl/) installed with your `$GOPATH` set. go get github.com/kardianos/govendor govendor get github.com/gohugoio/hugo  govendor get will fetch Hugo and all its dependent libraries to $GOPATH/src/github.com/gohugoio/hugo, and compile everything into a final hugo (or hugo.exe) executable, which you will find sitting inside $GOPATH/go/bin/, all ready to go!\nWindows users: where you see the $HOME environment variable above, replace it with %USERPROFILE%.\nNote: For syntax highlighting using the highlight shortcode, you need to install the Python-based Pygments program.\nContribuer Please see the contributing guide if you are interested in working with the Hugo source or contributing to the project in any way.\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/getting-start/doc-hugo-en-cours/utiliser-hugo/",
	"title": "Utiliser Hugo",
	"tags": [],
	"description": ".",
	"content": " Source \u0026ldquo;Using Hugo - documentation officielle Hugo, demeurant le seul lien de référence.\n Assurez-vous que Hugo est dans votre PATH (ou fournissez un chemin). Testez en lançant :\n$ hugo help hugo is the main command, used to build your Hugo site. Hugo is a Fast and Flexible Static Site Generator built with love by spf13 and friends in Go. Complete documentation is available at http://gohugo.io/. Usage: hugo [flags] hugo [command] Available Commands: benchmark Benchmark Hugo by building a site a number of times. check Contains some verification checks config Print the site configuration convert Convert your content to different formats env Print Hugo version and environment info gen A collection of several useful generators. help Help about any commanD import Import your site from others. list Listing out various types of content new Create new content for your site server A high performance webserver undraft Undraft changes the content's draft status from 'True' to 'False' version Print the version number of Hugo Flags: -b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/ -D, --buildDrafts include content marked as draft -E, --buildExpired include expired content -F, --buildFuture include content with publishdate in the future --cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/ --canonifyURLs if true, all relative URLs will be canonicalized using baseURL --cleanDestinationDir remove files from destination not found in static directories --config string config file (default is path/config.yaml|json|toml) -c, --contentDir string filesystem path to content directory -d, --destination string filesystem path to write files to --disable404 do not render 404 page --disableKinds stringSlice disable different kind of pages (home, RSS etc.) --disableRSS do not build RSS files --disableSitemap do not build Sitemap file --enableGitInfo add Git revision, date and author info to the pages --forceSyncStatic copy all files when static is changed. -h, --help help for hugo --i18n-warnings print missing translations --ignoreCache ignores the cache directory -l, --layoutDir string filesystem path to layout directory --log enable Logging --logFile string log File path (if set, logging enabled automatically) --noChmod don't sync permission mode of files --noTimes don't sync modification time of files --pluralizeListTitles pluralize titles in lists using inflect (default true) --preserveTaxonomyNames preserve taxonomy names as written (\u0026quot;Gérard Depardieu\u0026quot; vs \u0026quot;gerard-depardieu\u0026quot;) --quiet build in quiet mode --renderToMemory render to memory (only useful for benchmark testing) -s, --source string filesystem path to read files relative from --stepAnalysis display memory and timing of different steps of the program -t, --theme string theme to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --uglyURLs if true, use /filename.html instead of /filename/ -v, --verbose verbose output --verboseLog verbose logging -w, --watch watch filesystem for changes and recreate as needed Use \u0026quot;hugo [command] --help\u0026quot; for more information about a command.  Common Usage Example L\u0026rsquo;utilisation la plus commune est probablement de lancer hugo avec votre répertoire en cours étant le répertoire d\u0026rsquo;input :\n$ hugo 0 draft content 0 future content 99 pages created 0 paginator pages created 16 tags created 0 groups created in 120 ms  This generates your web site to the public/ directory, ready to be deployed to your web server.\nInstant feedback as you develop your web site "
},
{
	"uri": "https://docdock-hugo.netlify.com/creer-page/",
	"title": "Créer une Page",
	"tags": ["page", "creation"],
	"description": "",
	"content": " Le thème Hugo docDock définit deux types de page. Default et Slide.\n Default est la page commune comme celle que vous êtes en train de lire. Slide est une page qui utilise le plein écran pour afficher son contenu en markdown sous forme de présentation reveals.js. HomePage est un contenu spécial qui sera affiché sous forme de contenu de page d\u0026rsquo;accueil.  Pour indiquer à au thème docdock Hugo de considérer une page comme un dia, ajoutez simplement un type=\u0026quot;slide\u0026quot; dans le frontmatter de votre fichier.  lire ici pour en savoir plus pour transformer une page en slide\nHugo-theme-docdock fournit des archétypes pour vous aider à créer ce type de pages.\nFront Matter Chaque page Hugo doit définir un Front Matter en yaml, toml ou json.\nHugo-theme-docdock utilise les paramètres qui suivent au-dessus des paramètres déjà existants :\n+++ # Type de contenu, réglez \u0026quot;slide\u0026quot; pour l'afficher en plein écran avec reveal.js type=\u0026quot;page\u0026quot; # Nom du Créateur creatordisplayname = \u0026quot;Valère JEANTET\u0026quot; # E-mail du créateur creatoremail = \u0026quot;valere.jeantet@gmail.com\u0026quot; # Nom du dernier Auteur lastmodifierdisplayname = \u0026quot;xtof\u0026quot; # Email du dernier Auteur lastmodifieremail = \u0026quot;christophe@ducamp.me\u0026quot; +++  Tri Hugo fournit un moyen flexible pour gérer l\u0026rsquo;ordre de vos pages.\nLe moyen le plus simple est d\u0026rsquo;utliser un param weight dans le front matter de votre page.\n Cliquez ici pour en savoir plus sur l\u0026rsquo;organisation de contenus\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/content-organisation/",
	"title": "Organisation du Contenu",
	"tags": [],
	"description": "organiser, organiser",
	"content": " Avec Hugo, les pages sont le coeur de votre site. Organisez votre site comme tout autre projet Hugo. La magie opère avec l\u0026rsquo;implémentation des sections réalisée dans la v0.22 de Hugo (bravo @bep).\nAvec docDock, Chaque page de contenu compose le menu, elles façonnent la structure de votre site web.\nPour relier les pages les unes aux autres, placez les dans une hiérarchie de dossiers\ncontent ├── niveau-un │ ├── niveau-deux │ │ ├── niveau-trois │ │ │ ├── niveau-quatre │ │ │ │ ├── _index.md │ │ │ │ ├── page-4-a.md │ │ │ │ ├── page-4-b.md │ │ │ │ └── page-4-c.md │ │ │ ├── _index.md │ │ │ ├── page-3-a.md │ │ │ ├── page-3-b.md │ │ │ └── page-3-c.md │ │ ├── _index.md │ │ ├── page-2-a.md │ │ ├── page-2-b.md │ │ └── page-2-c.md │ ├── _index.md │ ├── page-1-a.md │ ├── page-1-b.md │ └── page-1-c.md ├── _index.md └── page-top.md  _index.md est requis dans chaque dossier, c\u0026rsquo;est votre \u0026ldquo;page d\u0026rsquo;accueil de dossier\u0026rdquo; Ajoutez une icône à une entrée de menu Dans le front matter de la page, ajoutez un param pre pour insérer tout code HTML avant l\u0026rsquo;étiquette du menu :\nexemple pour afficher une icône github\n+++ title = \u0026quot;repo Github\u0026quot; pre =\u0026quot;\u0026lt;i class='fa fa-github'\u0026gt;\u0026lt;/i\u0026gt; \u0026quot; +++   \" name = \"Github repo\" +++ -- Look at the menu \u0026ldquo;Create Page/About images\u0026rdquo; which redirects to \u0026ldquo;Shortcodes/image -- Ordre des entrées groupées de menu/page dans votre frontmatter ajoutez le param weight avec un nombre pour trier.\n+++ title=\u0026quot;Ma page\u0026quot; weight = 4 +++  Cacher une entrée de menu dans votre frontmatter ajoutez le parma hidden=true.\n+++ title=\u0026quot;Ma page\u0026quot; hidden = true +++  Menu déplié par défaut Une ou plusieurs entrées de menu peuvent être affichées dépliées par défaut. (Comme l\u0026rsquo;entrée du menu \u0026ldquo;Démarrer\u0026rdquo; sur ce site web.)\ndans votre frontmatter ajoutez le param alwaysopen=true. exemple :\ntitle = \u0026quot;Démarrage\u0026quot; description = \u0026quot;\u0026quot; weight = 1 alwaysopen = true  Structure de dossier et nom de fichier Organisation de Contenu est votre structure de dossier content.\nPage d\u0026rsquo;accueil Regardez comment personnaliser la page d\u0026rsquo;Accueil\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/",
	"title": "Raccourcis-code",
	"tags": [],
	"description": "",
	"content": "Un paquet de raccourcis de code sont disponibles dans ce thème :\n children  Liste les pages parents d\u0026#39;une page\n alert  Le raccourci-code alert vous permet de surligner l\u0026#39;information dans votre page.\n attachments  Le raccourci-code `attachments` affiche une liste de fichiers attachés à une page.\n button  Affiche un bouton actionnable dans votre page.\n excerpt  Le raccourci-code Excerpt est utilisé pour marquer une partie d\u0026#39;un contenu de page pour réutilisation.\n excerpt-include  le raccourci-code Excerpt est utilisé pour afficher un extrait de contenu (un segment) provenant d\u0026#39;une page dans une autre.\n expand  Affiche une section de texte extensible / pliable dans votre page\n icon  Affiche une icône.\n image  Les images ont une syntaxe similaire aux liens mais sont précédées d\u0026#39;un point d\u0026#39;exclamation. Vous pouvez les retailler et y ajouter des classes CSS.\n mermaid  mermaid est ici un raccourci-code pour intégrer des diagrammes de séquence, flowcharts ou Gantt  notice  Des avertissements pour vous aider à structurer votre page\n panel  Permet de mettre en évidence les informations ou de les mettre dans une boîte.\n revealjs  présente le contenu sous forme d\u0026#39;une slide reveal.js\n "
},
{
	"uri": "https://docdock-hugo.netlify.com/search/",
	"title": "À Propos du Moteur de Recherche",
	"tags": [],
	"description": "",
	"content": "Rien à faire de votre côté. :-)\nLe thème Docdock utilise la dernière amélioration disponible dans les versions hugo 0.20+ pour générer un fichier index json prêt à être consommé par le moteur de recherche javascript lunr.js.\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/",
	"title": "Thème DocDock pour Hugo",
	"tags": [],
	"description": "",
	"content": " Thème docDock pour Hugo Hugo-theme-docdock est un thème pour Hugo, un moteur de site web rapide et moderne écrit en Go. Hugo est souvent utilisé pour les blogs, mais ce thème a été entièrement conçu pour produire de la documentation.\nCe thème est une adaptation partielle du thème Learn de matcornic.\ndocDock fonctionne avec une \u0026ldquo;structure de page en arbre\u0026rdquo; pour organiser le contenu. Tous les contenus sont des pages, qui appartiennent à d\u0026rsquo;autres pages. Cliquez ici pour en savoir plus sur l\u0026rsquo;organisation du contenu de docDock.\n  Principales Fonctionnalités  Recherche Pas de limites pour les niveaux de menu Génération de présentations slides RevealJS à partir du markdown (page embarquée ou plein-écran) Boutons suivant/précédent automatiques pour naviguer dans les entrées de menu Retaillage d\u0026rsquo;images, ombre\u0026hellip; Fichiers attachés Liste de pages enfants Extraction ! Inclusion de segment de contenu d\u0026rsquo;une page dans une autre Diagramme Mermaid (flowchart, sequence, gantt) Icônes, Boutons, Alertes, Panels, Truc/Note/Info/Warning boxes, Expansion Look and feel personnalisable, variantes de thèmes  Contribuez à cette documentation Aidez à mettre à jour ce contenu, cliquez simplement sur le lien Modifier cette page affiché en haut et à droite de la plupart des pages, et envoyez-moi une pull-request.\nUne fois fusionnée, votre modification sera déployée automatiquemnent. Documentation Cette documentation a été générée statiquement avec Hugo à l\u0026rsquo;aide d\u0026rsquo;une simple commnade : hugo -t docdock \u0026ndash; le code source original est disponible ici sur GitHub  \nDéploiements Automatiques Publié automatiquement et hébergé chez Netlify.\nPour en savoir plus sur les déploiements automatisés d\u0026rsquo;HUGO avec Netlify\n Netlify construit, déploie, et héberge les frontends.  "
},
{
	"uri": "https://docdock-hugo.netlify.com/content-organisation/extramenu/",
	"title": "Entrées de menu supplémentaires",
	"tags": [],
	"description": "",
	"content": "Vous pouvez définir des entrées de menu supplémentaires dans le menu de navigation sans quelque lien vers le contenu.\nModifiez la configuration du site web config.toml et ajoutez une entrée [[menu.shortcuts]] pour chaque lien que vous voulez ajouter.\nExemple pour le site web actuel, remarquez le param pre qui vous permet d\u0026rsquo;insérer du code HTML et utilisé ici pour séparer le contenu du menu de ce menu \u0026ldquo;statique\u0026rdquo;.\n[[menu.shortcuts]] pre = \u0026quot;\u0026lt;h3\u0026gt;Plus\u0026lt;/h3\u0026gt;\u0026quot; name = \u0026quot;\u0026lt;i class='fa fa-github'\u0026gt;\u0026lt;/i\u0026gt; Repo GitHub\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/vjeantet/hugo-theme-docdock\u0026quot; weight = 1 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Documentation Hugo\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 2   Regardez ici la documentation officielle de Hugo sur le menu\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/creer-page/homepage/",
	"title": "Page d&#39;Accueil",
	"tags": ["page", "création"],
	"description": "",
	"content": "Pour indiquer au thème Hugo docDock de considérer une page comme un contenu de page d\u0026rsquo;accueil, créez simplement un fichier de contenu appelé _index.md dans le dossier content.\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/content-organisation/logo/",
	"title": "Emplacement du Logo",
	"tags": [],
	"description": "",
	"content": "Créez une page _header.md dans le dossier content. Son contenu est ce que vous obtiendrez à l\u0026rsquo;emplacement du logo (tout en haut à gauche de l\u0026rsquo;écran).\nTruc : vous pouvez ajouter une image, une combobox avec des liens vers une autre documentation\u0026hellip; Considération pour l\u0026rsquo;emplacement du logo Ne réglez pas [menu.main] dans le frontmatter de votre fichier _header.md  Truc 2 : regardez Entrées de menu statiques supplémentaires si vous voulez ajouter des liens vers un autre site web dans cette barre latérale "
},
{
	"uri": "https://docdock-hugo.netlify.com/creer-page/myslide/",
	"title": "Ma Slide ! plein-écran",
	"tags": [],
	"description": "",
	"content": " Le matin Lever  Couper le réveil Sortir du lit  Petit-déjeuner  Manger des oeufs Boire du café  Soirée Dîner  Manger des spaghetti Boire du vin  Aller dormir  Aller au lit Compter les moutons  "
},
{
	"uri": "https://docdock-hugo.netlify.com/creer-page/page-slide/",
	"title": "Présenter une Slide",
	"tags": [],
	"description": "",
	"content": " Une page basique de contenu md peut être restituée comme une présentation plein écran reveal.js.\nVous pouvez aussi, embarquer une présentation dans une page sous forme de petite boîte, en utilisant le raccourci de code (shortcode) revealjs dans votre fichier md. Mise en Page Utilisez votre syntaxe commune Markdown que vous utilisez dans Hugo, n\u0026rsquo;oubliez pas que vous pouvez aussi placer des balises HTML.\nUne syntaxe spéciale (en commentaire html) est disponible pour ajouter des attribut aux éléments Markdown. Ceci est utile entre autre pour les fragments. Lisez SVP la  doc d\u0026rsquo;hakimel\nOptions Dans le frontmatter de votre fichier page, réglez les paramètres type et revealOptions.\nVotre contenu sera servi sous forme de présentation plein écran revealjs et revealOptions sera utilisé pour ajuster son comportement.\n+++ title = \u0026quot;Dia Test\u0026quot; type=\u0026quot;slide\u0026quot; theme = \u0026quot;league\u0026quot; [revealOptions] transition= 'concave' controls= true progress= true history= true center= true +++  apprenez-en plus sur les options reveal ici\nDélimiteurs de slides Au moment de créer le contenu de votre diaporama pour votre présentation dans le fichier de contenu markdown, vous devez pouvoir faire la distinction entre une dia et la suivante. Ceci peut être simplement réalisé en utilisant une convention dans le Markdown qui indique le démarrage de chaque nouvelle slide.\nLe fait que les slides horizontales et verticales soient supportées par reveal.js, chacune d\u0026rsquo;entre elles dispose de son propre et unique délimiteur.\nPour indiquer le démarrage d\u0026rsquo;une slide horizontale, ajoutez simplement le délimiteur suivant dans votre Markdown (3 tirets --- :\n---  Pour indiquer le démarrage d\u0026rsquo;une slide verticale, ajoutez simplement le délimiteur suivant dans votre Markdown (3 tirets du bas ___) :\n___  Ainsi en utilisant une combinaison de slides horizontales et verticales, vous pouvez personnaliser la navigation dans votre présentation diaporama. Généralement les slides verticales sont utilisées pour présenter de l\u0026rsquo;information sous une slide horizontale de niveau le plus haut.\nPar exemple, une présentation de diaporama simple peut être créée comme suit :\n+++ title = \u0026quot;test\u0026quot; date = \u0026quot;2017-04-24T18:36:24+02:00\u0026quot; type=\u0026quot;slide\u0026quot; theme = \u0026quot;league\u0026quot; [revealOptions] transition= 'concave' controls= true progress= true history= true center= true +++ # Le matin ___ ## Lever - Couper le réveil - Sortir du lit ___ ## Petit-déjeuner - Manger des oeufs - Boire du café --- # Soirée ___ ## Dîner - Manger des spaghetti - Boire du vin ___ ## Aller dormir - Aller au lit - Compter les moutons   Cliquez ici pour voir un rendu de cette page\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": " JAMStack : DocDock pour GoHugo un superbe thème pour héberger une documentation.\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/creer-page/page-images/",
	"title": "À Propos des Images",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docdock-hugo.netlify.com/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docdock-hugo.netlify.com/tags/creation/",
	"title": "Creation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docdock-hugo.netlify.com/tags/cr%C3%A9ation/",
	"title": "Création",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docdock-hugo.netlify.com/credits/",
	"title": "Crédits",
	"tags": [],
	"description": "contributeurs et packages utilisés par le thème hugo-theme-docdock",
	"content": " contributeurs github .ghContributors{ display:flex; flex-flow: wrap; align-content: flex-start } .ghContributors  div{ width: 50% ; display: inline-flex; margin-bottom: 5px; } .ghContributors  div label{ padding-left: 4px ; } .ghContributors  div span{ font-size: x-small; padding-left: 4px ; }   @vjeantet 133 commits   @matcornic 49 commits   @gwleclerc 17 commits   @lierdakil 16 commits   @Xipas 5 commits   @altinnadmin 4 commits   @Thiht 2 commits   @erikjasiak 1 commits   @giuliov 1 commits   @tarpdalton 1 commits   @JohnBlood 1 commits   @kamilchm 1 commits   @ripienaar 1 commits   @shazic 1 commits   @uweschaefer 1 commits   @justin-yan 1 commits   autres contributeurs  @bep support et conseils en français   @Jamstatic support et conseil en français   @Christophe Ducamp traduction  \nPackages et bibliothèques  Bootstrap - framework front end mermaid - génération de diagrammes et flowchart à partir d\u0026rsquo;un texte de la même manière que markdown font awesome - la fonte icônique et le framework CSS jQuery - La bibliothèque JavaScript Write Less, Do More lunr - Lunr vous permet de fournir une expérience de recherche géniale sans le besoin de services de recherche externes côté serveur\u0026hellip; horsey - composant d\u0026rsquo;auto-complétion progressif et personnalisable clipboard.js - copier le texte dans le presse papiers. highlight.js - Enlumineur de syntaxe Javascript modernizr - Une boîte à outils JavaScript qui permet aux développeurs web d\u0026rsquo;utiliser les nouvelles fonctionnalités CSS3 et HTML5 tout en maintenant un bon niveau de contrôle sur les navigateurs qui ne les supportent pas. reveal-js - Le framework de présentation HTML  Outillage  Netlify - Déploiement continu et hébergement de cette documentation. Sans oublier le support humain de Chris \u0026amp; Gérald. Hugo    "
},
{
	"uri": "https://docdock-hugo.netlify.com/tags/page/",
	"title": "Page",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docdock-hugo.netlify.com/content-organisation/customize-style/",
	"title": "Personnaliser le look and feel de votre site web",
	"tags": [],
	"description": "",
	"content": " Vous pouvez modifier le style et le comportement du thème sans y toucher.\n Injectez votre propre html, css ou js à l\u0026rsquo;intérieur de la page Ecrasez les css ou js existants avec vos propres fichiers  Injecter votre HTML à l\u0026rsquo;intérieur de la partie \u0026lt;head\u0026gt; de chaque page : Créez un fichier custom-head.html à l\u0026rsquo;intérieur dun dossier layouts/partials aux côté du dossier content\n  content/ layouts/  partials/  custom-head.html     désormais, soyez à l\u0026rsquo;aise pour ajouter le code JS, CSS, HTML que vous voulez :)\nà la fin de la partie body de chaque page : Créez un fichier custom-footer.html à l\u0026rsquo;intérieur d\u0026rsquo;un dossier layouts/partials à côté du dossier content\n  content/ layouts/  partials/  custom-footer.html     désormais, soyez à l\u0026rsquo;aise pour ajouter le code JS, CSS, HTML que vous voulez :)\nécraser les CSS ou JS existants Créez le fichier correspondant dans votre répertoire static, hugo utilisera le vôtre au lieu de celui du thème. Exemple :\ncréez un theme.css et placez-le dans static/css/ pour écraser complètement le theme.css de docDock\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/showcase/",
	"title": "Sites construits avec Docdock",
	"tags": [],
	"description": "Les Sites motorisés par Hugo avec le thème docdock ",
	"content": " https://invincible.site/ par @shazic "
},
{
	"uri": "https://docdock-hugo.netlify.com/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docdock-hugo.netlify.com/content-organisation/customize-style/theme-variants/",
	"title": "Variantes de thèmes",
	"tags": [],
	"description": "modifier les styles/couleurs du thème",
	"content": " Dans le fichier de configuration du site, vous pouvez régler un nom de variante de ce thème pour charger une css spécifique, avec différentes spécifications de couleurs.\najoutez un param themeVariant = \u0026quot;NOM_VARIANTe\u0026quot; dans votre fichier config.toml.\nLa variantes disponibles ne modifient que les couleurs pour l\u0026rsquo;instant Variante \u0026ldquo;gray\u0026rdquo; themeVariant = \u0026quot;gray\u0026quot;\nVariante \u0026ldquo;gold\u0026rdquo; themeVariant = \u0026quot;gold\u0026quot;\nVariant \u0026ldquo;green\u0026rdquo; themeVariant = \u0026quot;green\u0026quot;\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/alert/",
	"title": "alert",
	"tags": [],
	"description": "Le raccourci-code alert vous permet de surligner l&#39;information dans votre page.",
	"content": " Le raccourci-code alert vous permet de surligner l\u0026rsquo;information dans votre page. Il crée une boîte coloré entourant votre texte, comme ceci :\nCeci est une alerte ! Usage    Paramètre Par défaut Description     theme info success, info,warning,danger    Trucs : régler uniquement le thème comme argument fonctionne aussi : {{%alert warning%}} au lieu de {{%alert theme=\u0026quot;warning\u0026quot;%}}\n Exemples basiques {{% alert theme=\u0026quot;info\u0026quot; %}}**ceci** est une info texte{{% /alert %}} {{% alert theme=\u0026quot;success\u0026quot; %}}**Yeahhh !** est un texte{{% /alert %}} {{% alert theme=\u0026quot;warning\u0026quot; %}}**Soyez prudents** est un texte{{% /alert %}} {{% alert theme=\u0026quot;danger\u0026quot; %}}**Attention !** est un texte{{% /alert %}}  ceci est une info Yeahhh ! est un success Soyez prudent est un warning Attention ! est un danger "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/attachments/",
	"title": "attachments",
	"tags": [],
	"description": "Le raccourci-code `attachments` affiche une liste de fichiers attachés à une page.",
	"content": " Le raccourci-code attachments affiche une liste de fichiers joints à une page.\nExemple   Documents attachés   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    Usage Le raccourci-code liste les fichiers trouvés dans un dossier spécifique. Actuellement, il supporte deux implémentations pour les pages\n Si votre page est un fichier markdown, les pièces-jointes doivent être placées dans un dossier appelé comme votre page et finissant par .files.\n  content  _index.md page.files  piece-jointe.pdf  page.md    Si votre page est un dossier, les pièces jointes doivent être placées dans un dossier \u0026lsquo;files\u0026rsquo; imbriqué.\n  content  _index.md page  index.md files  piece-jointe.pdf       C\u0026rsquo;est tout !\nTruc : Regardez le code source de documentation sur github paramètres    Paramètre Par défaut Description     title \u0026ldquo;Attachments\u0026rdquo; Liste des title   pattern \u0026rdquo;.*\u0026rdquo; Une expression régulirèe, utilisée pour filtrer les pièces jointes par nom de fichier. La valeur du paramètre pattern doit être une expression régulière.\nPar exemple :\n Pour faire correspondre un suffixe de fichier de \u0026lsquo;jpg\u0026rsquo;, utilisez .*jpg (pas *.jpg). Pour faire correspondre des noms de fichiers finissant par \u0026lsquo;jpg\u0026rsquo; ou \u0026lsquo;png\u0026rsquo;, utilisez .*(jpg|png)       Démo Liste de pièces jointes finissant par pdf ou mp4 {{%attachments title=\u0026quot;Fichiers en rapport\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}  restitue :\n  Fichiers en rapport   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)   "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/button/",
	"title": "button",
	"tags": [],
	"description": "Affiche un bouton actionnable dans votre page.",
	"content": " Affiche un bouton actionnable dans votre page.\n Ceci est un bouton d'avertissement   Usage    Paramètre Par défaut Description     href \u0026rdquo;\u0026rdquo; L\u0026rsquo;endroit où href pointe   align \u0026ldquo;center\u0026rdquo; aligement horizontal du bouton sur la page   theme primary default, primary , success, info, warning, danger    Le texte à l\u0026rsquo;intérieur du texte que vous placez en raccourci-code sera affiché comme texte de bouton.\nDémo {{\u0026lt; button href=\u0026quot;https://google.com\u0026quot; \u0026gt;}} allez chez google {{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026quot;https://google.com\u0026quot; theme=\u0026quot;success\u0026quot; \u0026gt;}} Succès {{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026quot;https://google.com\u0026quot; theme=\u0026quot;info\u0026quot; \u0026gt;}} Info {{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026quot;https://google.com\u0026quot; theme=\u0026quot;warning\u0026quot; \u0026gt;}} Avertissement {{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026quot;https://google.com\u0026quot; theme=\u0026quot;danger\u0026quot; \u0026gt;}} Danger ! {{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026quot;https://google.com\u0026quot; theme=\u0026quot;default\u0026quot; \u0026gt;}} Danger ! {{\u0026lt; /button \u0026gt;}}   allez chez google  Succès  Info  Avertissement  Danger !  Danger !  "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/",
	"title": "children",
	"tags": [],
	"description": "Liste les pages parents d&#39;une page",
	"content": " Utilisez le raccourci-code children pour lister les pages enfants d\u0026rsquo;une page et des autres descendants (enfants). Par défaut, le raccourci-code affiche les liens vers les pages enfants.\nUsage    Paramètres Défaut Description     style \u0026ldquo;li\u0026rdquo; Choisir le style utilisé pour afficher les descendants. Ce pourrait être n\u0026rsquo;importe quel nom de balise HTML   showhidden \u0026ldquo;false\u0026rdquo; Si true, les pages enfants cachées par le menu seront affichées   description \u0026ldquo;false\u0026rdquo; Vous permet d\u0026rsquo;inclure un petit texte sous chaque page dans la liste.Si aucune description n\u0026rsquo;existe pour la page, le raccourci-code prend les 70 premiers mots de votre contenu. lire plus d\u0026rsquo;info sur les résués sur gohugo.io   depth 1 Entrez un nombre pour spécifier la profondeur des descendants à afficher. Par exemple, si la valeur est 2, le raccourci-code affichera 2 niveaux de pages enfants. Trucs : réglez le à 999 pour obtenir tous les descendants    sort none Triez les enfants par Weight - pour trier sur l\u0026rsquo;ordre du menuName - pour trier alphabétiquement par étiquette du menu Identifier - pour trier alphabétiquement sur l\u0026rsquo;identifiant réglé dans le frontmatterURL - URL    Démo {{% children %}}   page 1   page 2   page 3   page test   {{% children description=\u0026quot;true\u0026quot; %}}   page 1  Ceci est une démo de page enfant\n page 2  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page 3  Ceci est une démo de page enfant\n page test  Ceci est une page test\n {{% children showhidden=\u0026quot;true\u0026quot; %}}   page 1   page 2   page 3   page 4   page test   {{% children style=\u0026quot;h3\u0026quot; depth=\u0026quot;3\u0026quot; description=\u0026quot;true\u0026quot; %}}   page 1  Ceci est une démo de page enfant\n  page 1-1  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n  page 1-1-1  Ceci est une démo de page enfant\n \n page 2  \n  page test 3  Ceci est une page test\n  \n page 3  Ceci est une démo de page enfant\n   page test  Ceci est une page test\n  \n{{% children style=\u0026quot;div\u0026quot; depth=\u0026quot;999\u0026quot; %}}   page 1    page 1-1    page 1-1-1    page 1-1-1-1    page 1-1-1-1-1    \n\n\n\n page 2    page test 3    \n page 3     page test    \n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/excerpt/",
	"title": "excerpt",
	"tags": [],
	"description": "Le raccourci-code Excerpt est utilisé pour marquer une partie d&#39;un contenu de page pour réutilisation.",
	"content": " Le raccourci-code excerpt est utilisé pour marquer une partie du contenu d\u0026rsquo;une page pour réutilisation. La définition d\u0026rsquo;un extrait permet à d\u0026rsquo;autres raccourcis-code, tels que le raccourci de code excerpt-include, d\u0026rsquo;afficher le contenu marqué ailleurs.\nVous ne pouvez définir qu\u0026rsquo;un seul extrait par page. En d\u0026rsquo;autres mots, vous ne pouvez ajouter qu\u0026rsquo;un seul raccourci-code Excerpt par page. Usage    Param par défaut Description     hidden \u0026ldquo;false\u0026rdquo; Vérifie si le contenu de la page contenu dans le gardien de place du raccourci-code Excerpt est affiché sur la page.Notez que cette option n\u0026rsquo;affecte la page que si elle contien le raccourci-code Excerpt. Elle n\u0026rsquo;impacte pas les pages où le contenu est réutilisé..     Demo {{%excerpt%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation **ullamco** laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in _reprehenderit in voluptate_ cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /excerpt%}}  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nVoir un exemple avec le raccourci-code excerpt-include "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/excerpt-include/",
	"title": "excerpt-include",
	"tags": [],
	"description": "le raccourci-code Excerpt est utilisé pour afficher un extrait de contenu (un segment) provenant d&#39;une page dans une autre.",
	"content": " Le raccourci-code Excerpt Include s\u0026rsquo;utilise pour afficher une extraction de contenu (ce qui veut dire un segment de) provenant d\u0026rsquo;une page dans une autre. Avant de pouvoir utiliser ce raccourci-code, l\u0026rsquo;extrait doit avoir été défini en utilisant le raccouric-code Excerpt. Notez que vous pouvez avoir plus d\u0026rsquo;un raccourci-code Excerpt Include sur une page (même si vous ne pouvez avoir qu\u0026rsquo;un seul raccourci-code Excerpt sur une page). Usage    Paramètre valeur par défaut Description     filename requis Tapez le nom de fichier de la page qui contient l\u0026rsquo;extrait à afficher.Le chemin est relatif au dossier content   panel none Détermine si docDock affichera un panel autour du contenu extrait. Le panel comprend la valeur donnée du panel et la bordure du panel. Par défaut, le panel et le titre ne sont pas affichés.    Démo Le paragraphe du dessous montre un exemple d\u0026rsquo;un raccourci-code Excerpt Include, contenant le contenu d\u0026rsquo;un extrait que nous avons défini sur la page de raccourci-code Excerpt. Sur le raccourci-code Excerpt Include en-dessous, nous avons réglé les options pour afficher à la fois le titre et le panel entourant le contenu.\n{{%excerpt-include filename=\u0026quot;shortcodes/excerpt.md\u0026quot; panel=\u0026quot;Extrait de la page excerpt\u0026quot; /%}}  Extrait de la page excerpt Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/expand/",
	"title": "expand",
	"tags": [],
	"description": "Affiche une section de texte extensible / pliable dans votre page",
	"content": " Le raccourci-code Expand affiche une section de texte extensible ou pliable sur votre page. Voici un exemple\n  déplie-moi   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  Usage ce raccourci-code prend exactement un paramètre facultatif pour définir le texte qui apparaît à côté de l\u0026rsquo;icône déplier/plier. (La valeur par défaut est \u0026ldquo;Expand me\u0026hellip;\u0026rdquo;)\n{{%expand \u0026quot;Ce thème docdock vous botte ?\u0026quot; %}}Oui !.{{% /expand%}}    Ce thème docdock vous botte ?   Oui !   Démo {{%expand \u0026quot;déplie-moi STP\u0026quot; %}}Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.{{% /expand%}}    déplie-moi STP   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/icon/",
	"title": "icon",
	"tags": [],
	"description": "Affiche une icône.",
	"content": " Affiche une icône comme   \nCela utilise :\n la bibliothèque glyphicons (bootstrap).plus d\u0026rsquo;infos ici la bibliothèque fontawesome plus d\u0026rsquo;infos ici  Ce raccourci-code icon affichera une icône dans votre page.\nUsage    Paramètre Valeur par défaut Description     name requis nom de l\u0026rsquo;icône (voir au-dessous)   size none taille de l\u0026rsquo;icône, medium, xx-small, x-small, small, large, x-large, xx-large, 11px, 2em, 20%\u0026hellip;.    Truc : régler uniquement le nom comme argument fonctionne aussi : {{\u0026lt;icon film\u0026gt;}} au lieu de {{\u0026lt;icon name=\u0026quot;film\u0026quot;\u0026gt;}}\n Demo {{\u0026lt; icon name=\u0026quot;film\u0026quot; size=\u0026quot;large\u0026quot; \u0026gt;}}   .\nicônes disponibles    asterisk   plus   euro   eur   minus   cloud   envelope   pencil   glass   music   search   heart   star   star-empty   user   film   th-large   th   th-list   ok   remove   zoom-in   zoom-out   off   signal   cog   trash   home   file   time   road   download-alt   download   upload   inbox   play-circle   repeat   refresh   list-alt   lock   flag   headphones   volume-off   volume-down   volume-up   qrcode   barcode   tag   tags   book   bookmark   print   camera   font   bold   italic   text-height   text-width   align-left   align-center   align-right   align-justify   list   indent-left   indent-right   facetime-video   picture   map-marker   adjust   tint   edit   share   check   move   step-backward   fast-backward   backward   play   pause   stop   forward   fast-forward   step-forward   eject   chevron-left   chevron-right   plus-sign   minus-sign   remove-sign   ok-sign   question-sign   info-sign   screenshot   remove-circle   ok-circle   ban-circle   arrow-left   arrow-right   arrow-up   arrow-down   share-alt   resize-full   resize-small   exclamation-sign   gift   leaf   fire   eye-open   eye-close   warning-sign   plane   calendar   random   comment   magnet   chevron-up   chevron-down   retweet   shopping-cart   folder-close   folder-open   resize-vertical   resize-horizontal   hdd   bullhorn   bell   certificate   thumbs-up   thumbs-down   hand-right   hand-left   hand-up   hand-down   circle-arrow-right   circle-arrow-left   circle-arrow-up   circle-arrow-down   globe   wrench   tasks   filter   briefcase   fullscreen   dashboard   paperclip   heart-empty   link   phone   pushpin   usd   gbp   sort   sort-by-alphabet   sort-by-alphabet-alt   sort-by-order   sort-by-order-alt   sort-by-attributes   sort-by-attributes-alt   unchecked   expand   collapse-down   collapse-up   log-in   flash   log-out   new-window   record   save   open   saved   import   export   send   floppy-disk   floppy-saved   floppy-remove   floppy-save   floppy-open   credit-card   transfer   cutlery   header   compressed   earphone   phone-alt   tower   stats   sd-video   hd-video   subtitles   sound-stereo   sound-dolby   sound-5-1   sound-6-1   sound-7-1   copyright-mark   registration-mark   cloud-download   cloud-upload   tree-conifer   tree-deciduous   cd   save-file   open-file   level-up   copy   paste   alert   equalizer   king   queen   pawn   bishop   knight   baby-formula   tent   blackboard   bed   apple   erase   hourglass   lamp   duplicate   piggy-bank   scissors   bitcoin   btc   xbt   yen   jpy   ruble   rub   scale   ice-lolly   ice-lolly-tasted   education   option-horizontal   option-vertical   menu-hamburger   modal-window   oil   grain   sunglasses   text-size   text-color   text-background   object-align-top   object-align-bottom   object-align-horizontal   object-align-left   object-align-vertical   object-align-right   triangle-right   triangle-left   triangle-bottom   triangle-top   console   superscript   subscript   menu-left   menu-right   menu-down   menu-up  Icônes Applications Web    fa-address-book   fa-address-book-o   fa-address-card   fa-address-card-o   fa-adjust   fa-american-sign-language-interpreting   fa-anchor   fa-archive   fa-area-chart   fa-arrows   fa-arrows-h   fa-arrows-v   fa-asl-interpreting (alias)   fa-assistive-listening-systems   fa-asterisk   fa-at   fa-audio-description   fa-automobile (alias)   fa-balance-scale   fa-ban   fa-bank (alias)   fa-bar-chart   fa-bar-chart-o (alias)   fa-barcode   fa-bars   fa-bath   fa-bathtub (alias)   fa-battery (alias)   fa-battery-0 (alias)   fa-battery-1 (alias)   fa-battery-2 (alias)   fa-battery-3 (alias)   fa-battery-4 (alias)   fa-battery-empty   fa-battery-full   fa-battery-half   fa-battery-quarter   fa-battery-three-quarters   fa-bed   fa-beer   fa-bell   fa-bell-o   fa-bell-slash   fa-bell-slash-o   fa-bicycle   fa-binoculars   fa-birthday-cake   fa-blind   fa-bluetooth   fa-bluetooth-b   fa-bolt   fa-bomb   fa-book   fa-bookmark   fa-bookmark-o   fa-braille   fa-briefcase   fa-bug   fa-building   fa-building-o   fa-bullhorn   fa-bullseye   fa-bus   fa-cab (alias)   fa-calculator   fa-calendar   fa-calendar-check-o   fa-calendar-minus-o   fa-calendar-o   fa-calendar-plus-o   fa-calendar-times-o   fa-camera   fa-camera-retro   fa-car   fa-caret-square-o-down   fa-caret-square-o-left   fa-caret-square-o-right   fa-caret-square-o-up   fa-cart-arrow-down   fa-cart-plus   fa-cc   fa-certificate   fa-check   fa-check-circle   fa-check-circle-o   fa-check-square   fa-check-square-o   fa-child   fa-circle   fa-circle-o   fa-circle-o-notch   fa-circle-thin   fa-clock-o   fa-clone   fa-close (alias)   fa-cloud   fa-cloud-download   fa-cloud-upload   fa-code   fa-code-fork   fa-coffee   fa-cog   fa-cogs   fa-comment   fa-comment-o   fa-commenting   fa-commenting-o   fa-comments   fa-comments-o   fa-compass   fa-copyright   fa-creative-commons   fa-credit-card   fa-credit-card-alt   fa-crop   fa-crosshairs   fa-cube   fa-cubes   fa-cutlery   fa-dashboard (alias)   fa-database   fa-deaf   fa-deafness (alias)   fa-desktop   fa-diamond   fa-dot-circle-o   fa-download   fa-drivers-license (alias)   fa-drivers-license-o (alias)   fa-edit (alias)   fa-ellipsis-h   fa-ellipsis-v   fa-envelope   fa-envelope-o   fa-envelope-open   fa-envelope-open-o   fa-envelope-square   fa-eraser   fa-exchange   fa-exclamation   fa-exclamation-circle   fa-exclamation-triangle   fa-external-link   fa-external-link-square   fa-eye   fa-eye-slash   fa-eyedropper   fa-fax   fa-feed (alias)   fa-female   fa-fighter-jet   fa-file-archive-o   fa-file-audio-o   fa-file-code-o   fa-file-excel-o   fa-file-image-o   fa-file-movie-o (alias)   fa-file-pdf-o   fa-file-photo-o (alias)   fa-file-picture-o (alias)   fa-file-powerpoint-o   fa-file-sound-o (alias)   fa-file-video-o   fa-file-word-o   fa-file-zip-o (alias)   fa-film   fa-filter   fa-fire   fa-fire-extinguisher   fa-flag   fa-flag-checkered   fa-flag-o   fa-flash (alias)   fa-flask   fa-folder   fa-folder-o   fa-folder-open   fa-folder-open-o   fa-frown-o   fa-futbol-o   fa-gamepad   fa-gavel   fa-gear (alias)   fa-gears (alias)   fa-gift   fa-glass   fa-globe   fa-graduation-cap   fa-group (alias)   fa-hand-grab-o (alias)   fa-hand-lizard-o   fa-hand-paper-o   fa-hand-peace-o   fa-hand-pointer-o   fa-hand-rock-o   fa-hand-scissors-o   fa-hand-spock-o   fa-hand-stop-o (alias)   fa-handshake-o   fa-hard-of-hearing (alias)   fa-hashtag   fa-hdd-o   fa-headphones   fa-heart   fa-heart-o   fa-heartbeat   fa-history   fa-home   fa-hotel (alias)   fa-hourglass   fa-hourglass-1 (alias)   fa-hourglass-2 (alias)   fa-hourglass-3 (alias)   fa-hourglass-end   fa-hourglass-half   fa-hourglass-o   fa-hourglass-start   fa-i-cursor   fa-id-badge   fa-id-card   fa-id-card-o   fa-image (alias)   fa-inbox   fa-industry   fa-info   fa-info-circle   fa-institution (alias)   fa-key   fa-keyboard-o   fa-language   fa-laptop   fa-leaf   fa-legal (alias)   fa-lemon-o   fa-level-down   fa-level-up   fa-life-bouy (alias)   fa-life-buoy (alias)   fa-life-ring   fa-life-saver (alias)   fa-lightbulb-o   fa-line-chart   fa-location-arrow   fa-lock   fa-low-vision   fa-magic   fa-magnet   fa-mail-forward (alias)   fa-mail-reply (alias)   fa-mail-reply-all (alias)   fa-male   fa-map   fa-map-marker   fa-map-o   fa-map-pin   fa-map-signs   fa-meh-o   fa-microchip   fa-microphone   fa-microphone-slash   fa-minus   fa-minus-circle   fa-minus-square   fa-minus-square-o   fa-mobile   fa-mobile-phone (alias)   fa-money   fa-moon-o   fa-mortar-board (alias)   fa-motorcycle   fa-mouse-pointer   fa-music   fa-navicon (alias)   fa-newspaper-o   fa-object-group   fa-object-ungroup   fa-paint-brush   fa-paper-plane   fa-paper-plane-o   fa-paw   fa-pencil   fa-pencil-square   fa-pencil-square-o   fa-percent   fa-phone   fa-phone-square   fa-photo (alias)   fa-picture-o   fa-pie-chart   fa-plane   fa-plug   fa-plus   fa-plus-circle   fa-plus-square   fa-plus-square-o   fa-podcast   fa-power-off   fa-print   fa-puzzle-piece   fa-qrcode   fa-question   fa-question-circle   fa-question-circle-o   fa-quote-left   fa-quote-right   fa-random   fa-recycle   fa-refresh   fa-registered   fa-remove (alias)   fa-reorder (alias)   fa-reply   fa-reply-all   fa-retweet   fa-road   fa-rocket   fa-rss   fa-rss-square   fa-s15 (alias)   fa-search   fa-search-minus   fa-search-plus   fa-send (alias)   fa-send-o (alias)   fa-server   fa-share   fa-share-alt   fa-share-alt-square   fa-share-square   fa-share-square-o   fa-shield   fa-ship   fa-shopping-bag   fa-shopping-basket   fa-shopping-cart   fa-shower   fa-sign-in   fa-sign-language   fa-sign-out   fa-signal   fa-signing (alias)   fa-sitemap   fa-sliders   fa-smile-o   fa-snowflake-o   fa-soccer-ball-o (alias)   fa-sort   fa-sort-alpha-asc   fa-sort-alpha-desc   fa-sort-amount-asc   fa-sort-amount-desc   fa-sort-asc   fa-sort-desc   fa-sort-down (alias)   fa-sort-numeric-asc   fa-sort-numeric-desc   fa-sort-up (alias)   fa-space-shuttle   fa-spinner   fa-spoon   fa-square   fa-square-o   fa-star   fa-star-half   fa-star-half-empty (alias)   fa-star-half-full (alias)   fa-star-half-o   fa-star-o   fa-sticky-note   fa-sticky-note-o   fa-street-view   fa-suitcase   fa-sun-o   fa-support (alias)   fa-tablet   fa-tachometer   fa-tag   fa-tags   fa-tasks   fa-taxi   fa-television   fa-terminal   fa-thermometer (alias)   fa-thermometer-0 (alias)   fa-thermometer-1 (alias)   fa-thermometer-2 (alias)   fa-thermometer-3 (alias)   fa-thermometer-4 (alias)   fa-thermometer-empty   fa-thermometer-full   fa-thermometer-half   fa-thermometer-quarter   fa-thermometer-three-quarters   fa-thumb-tack   fa-thumbs-down   fa-thumbs-o-down   fa-thumbs-o-up   fa-thumbs-up   fa-ticket   fa-times   fa-times-circle   fa-times-circle-o   fa-times-rectangle (alias)   fa-times-rectangle-o (alias)   fa-tint   fa-toggle-down (alias)   fa-toggle-left (alias)   fa-toggle-off   fa-toggle-on   fa-toggle-right (alias)   fa-toggle-up (alias)   fa-trademark   fa-trash   fa-trash-o   fa-tree   fa-trophy   fa-truck   fa-tty   fa-tv (alias)   fa-umbrella   fa-universal-access   fa-university   fa-unlock   fa-unlock-alt   fa-unsorted (alias)   fa-upload   fa-user   fa-user-circle   fa-user-circle-o   fa-user-o   fa-user-plus   fa-user-secret   fa-user-times   fa-users   fa-vcard (alias)   fa-vcard-o (alias)   fa-video-camera   fa-volume-control-phone   fa-volume-down   fa-volume-off   fa-volume-up   fa-warning (alias)   fa-wheelchair   fa-wheelchair-alt   fa-wifi   fa-window-close   fa-window-close-o   fa-window-maximize   fa-window-minimize   fa-window-restore   fa-wrench  Icônes Accessibilité    fa-american-sign-language-interpreting   fa-asl-interpreting (alias)   fa-assistive-listening-systems   fa-audio-description   fa-blind   fa-braille   fa-cc   fa-deaf   fa-deafness (alias)   fa-hard-of-hearing (alias)   fa-low-vision   fa-question-circle-o   fa-sign-language   fa-signing (alias)   fa-tty   fa-universal-access   fa-volume-control-phone   fa-wheelchair   fa-wheelchair-alt  Icônes Mains    fa-hand-grab-o (alias)   fa-hand-lizard-o   fa-hand-o-down   fa-hand-o-left   fa-hand-o-right   fa-hand-o-up   fa-hand-paper-o   fa-hand-peace-o   fa-hand-pointer-o   fa-hand-rock-o   fa-hand-scissors-o   fa-hand-spock-o   fa-hand-stop-o (alias)   fa-thumbs-down   fa-thumbs-o-down   fa-thumbs-o-up   fa-thumbs-up  Icônes de Transport    fa-ambulance   fa-automobile (alias)   fa-bicycle   fa-bus   fa-cab (alias)   fa-car   fa-fighter-jet   fa-motorcycle   fa-plane   fa-rocket   fa-ship   fa-space-shuttle   fa-subway   fa-taxi   fa-train   fa-truck   fa-wheelchair   fa-wheelchair-alt  Gender Icons    fa-genderless   fa-intersex (alias)   fa-mars   fa-mars-double   fa-mars-stroke   fa-mars-stroke-h   fa-mars-stroke-v   fa-mercury   fa-neuter   fa-transgender   fa-transgender-alt   fa-venus   fa-venus-double   fa-venus-mars  Icônes Types de Fichiers    fa-file   fa-file-archive-o   fa-file-audio-o   fa-file-code-o   fa-file-excel-o   fa-file-image-o   fa-file-movie-o (alias)   fa-file-o   fa-file-pdf-o   fa-file-photo-o (alias)   fa-file-picture-o (alias)   fa-file-powerpoint-o   fa-file-sound-o (alias)   fa-file-text   fa-file-text-o   fa-file-video-o   fa-file-word-o   fa-file-zip-o (alias)  Spinner Icons    fa-circle-o-notch   fa-cog   fa-gear (alias)   fa-refresh   fa-spinner  Icônes Contrôle Formulaires    fa-check-square   fa-check-square-o   fa-circle   fa-circle-o   fa-dot-circle-o   fa-minus-square   fa-minus-square-o   fa-plus-square   fa-plus-square-o   fa-square   fa-square-o  Icônes de Paiment    fa-cc-amex   fa-cc-diners-club   fa-cc-discover   fa-cc-jcb   fa-cc-mastercard   fa-cc-paypal   fa-cc-stripe   fa-cc-visa   fa-credit-card   fa-credit-card-alt   fa-google-wallet   fa-paypal  Icônes pour les charts    fa-area-chart   fa-bar-chart   fa-bar-chart-o (alias)   fa-line-chart   fa-pie-chart  Icônes de Monnaie    fa-bitcoin (alias)   fa-btc   fa-cny (alias)   fa-dollar (alias)   fa-eur   fa-euro (alias)   fa-gbp   fa-gg   fa-gg-circle   fa-ils   fa-inr   fa-jpy   fa-krw   fa-money   fa-rmb (alias)   fa-rouble (alias)   fa-rub   fa-ruble (alias)   fa-rupee (alias)   fa-shekel (alias)   fa-sheqel (alias)   fa-try   fa-turkish-lira (alias)   fa-usd   fa-won (alias)   fa-yen (alias)  Icônes Éditeur de Texte    fa-align-center   fa-align-justify   fa-align-left   fa-align-right   fa-bold   fa-chain (alias)   fa-chain-broken   fa-clipboard   fa-columns   fa-copy (alias)   fa-cut (alias)   fa-dedent (alias)   fa-eraser   fa-file   fa-file-o   fa-file-text   fa-file-text-o   fa-files-o   fa-floppy-o   fa-font   fa-header   fa-indent   fa-italic   fa-link   fa-list   fa-list-alt   fa-list-ol   fa-list-ul   fa-outdent   fa-paperclip   fa-paragraph   fa-paste (alias)   fa-repeat   fa-rotate-left (alias)   fa-rotate-right (alias)   fa-save (alias)   fa-scissors   fa-strikethrough   fa-subscript   fa-superscript   fa-table   fa-text-height   fa-text-width   fa-th   fa-th-large   fa-th-list   fa-underline   fa-undo   fa-unlink (alias)  Directional Icons    fa-angle-double-down   fa-angle-double-left   fa-angle-double-right   fa-angle-double-up   fa-angle-down   fa-angle-left   fa-angle-right   fa-angle-up   fa-arrow-circle-down   fa-arrow-circle-left   fa-arrow-circle-o-down   fa-arrow-circle-o-left   fa-arrow-circle-o-right   fa-arrow-circle-o-up   fa-arrow-circle-right   fa-arrow-circle-up   fa-arrow-down   fa-arrow-left   fa-arrow-right   fa-arrow-up   fa-arrows   fa-arrows-alt   fa-arrows-h   fa-arrows-v   fa-caret-down   fa-caret-left   fa-caret-right   fa-caret-square-o-down   fa-caret-square-o-left   fa-caret-square-o-right   fa-caret-square-o-up   fa-caret-up   fa-chevron-circle-down   fa-chevron-circle-left   fa-chevron-circle-right   fa-chevron-circle-up   fa-chevron-down   fa-chevron-left   fa-chevron-right   fa-chevron-up   fa-exchange   fa-hand-o-down   fa-hand-o-left   fa-hand-o-right   fa-hand-o-up   fa-long-arrow-down   fa-long-arrow-left   fa-long-arrow-right   fa-long-arrow-up   fa-toggle-down (alias)   fa-toggle-left (alias)   fa-toggle-right (alias)   fa-toggle-up (alias)  Video Player Icons    fa-arrows-alt   fa-backward   fa-compress   fa-eject   fa-expand   fa-fast-backward   fa-fast-forward   fa-forward   fa-pause   fa-pause-circle   fa-pause-circle-o   fa-play   fa-play-circle   fa-play-circle-o   fa-random   fa-step-backward   fa-step-forward   fa-stop   fa-stop-circle   fa-stop-circle-o   fa-youtube-play  Brand Icons    fa-500px   fa-adn   fa-amazon   fa-android   fa-angellist   fa-apple   fa-bandcamp   fa-behance   fa-behance-square   fa-bitbucket   fa-bitbucket-square   fa-bitcoin (alias)   fa-black-tie   fa-bluetooth   fa-bluetooth-b   fa-btc   fa-buysellads   fa-cc-amex   fa-cc-diners-club   fa-cc-discover   fa-cc-jcb   fa-cc-mastercard   fa-cc-paypal   fa-cc-stripe   fa-cc-visa   fa-chrome   fa-codepen   fa-codiepie   fa-connectdevelop   fa-contao   fa-css3   fa-dashcube   fa-delicious   fa-deviantart   fa-digg   fa-dribbble   fa-dropbox   fa-drupal   fa-edge   fa-eercast   fa-empire   fa-envira   fa-etsy   fa-expeditedssl   fa-fa (alias)   fa-facebook   fa-facebook-f (alias)   fa-facebook-official   fa-facebook-square   fa-firefox   fa-first-order   fa-flickr   fa-font-awesome   fa-fonticons   fa-fort-awesome   fa-forumbee   fa-foursquare   fa-free-code-camp   fa-ge (alias)   fa-get-pocket   fa-gg   fa-gg-circle   fa-git   fa-git-square   fa-github   fa-github-alt   fa-github-square   fa-gitlab   fa-gittip (alias)   fa-glide   fa-glide-g   fa-google   fa-google-plus   fa-google-plus-circle (alias)   fa-google-plus-official   fa-google-plus-square   fa-google-wallet   fa-gratipay   fa-grav   fa-hacker-news   fa-houzz   fa-html5   fa-imdb   fa-instagram   fa-internet-explorer   fa-ioxhost   fa-joomla   fa-jsfiddle   fa-lastfm   fa-lastfm-square   fa-leanpub   fa-linkedin   fa-linkedin-square   fa-linode   fa-linux   fa-maxcdn   fa-meanpath   fa-medium   fa-meetup   fa-mixcloud   fa-modx   fa-odnoklassniki   fa-odnoklassniki-square   fa-opencart   fa-openid   fa-opera   fa-optin-monster   fa-pagelines   fa-paypal   fa-pied-piper   fa-pied-piper-alt   fa-pied-piper-pp   fa-pinterest   fa-pinterest-p   fa-pinterest-square   fa-product-hunt   fa-qq   fa-quora   fa-ra (alias)   fa-ravelry   fa-rebel   fa-reddit   fa-reddit-alien   fa-reddit-square   fa-renren   fa-resistance (alias)   fa-safari   fa-scribd   fa-sellsy   fa-share-alt   fa-share-alt-square   fa-shirtsinbulk   fa-simplybuilt   fa-skyatlas   fa-skype   fa-slack   fa-slideshare   fa-snapchat   fa-snapchat-ghost   fa-snapchat-square   fa-soundcloud   fa-spotify   fa-stack-exchange   fa-stack-overflow   fa-steam   fa-steam-square   fa-stumbleupon   fa-stumbleupon-circle   fa-superpowers   fa-telegram   fa-tencent-weibo   fa-themeisle   fa-trello   fa-tripadvisor   fa-tumblr   fa-tumblr-square   fa-twitch   fa-twitter   fa-twitter-square   fa-usb   fa-viacoin   fa-viadeo   fa-viadeo-square   fa-vimeo   fa-vimeo-square   fa-vine   fa-vk   fa-wechat (alias)   fa-weibo   fa-weixin   fa-whatsapp   fa-wikipedia-w   fa-windows   fa-wordpress   fa-wpbeginner   fa-wpexplorer   fa-wpforms   fa-xing   fa-xing-square   fa-y-combinator   fa-y-combinator-square (alias)   fa-yahoo   fa-yc (alias)   fa-yc-square (alias)   fa-yelp   fa-yoast   fa-youtube   fa-youtube-play   fa-youtube-square  "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/image/",
	"title": "image",
	"tags": [],
	"description": "Les images ont une syntaxe similaire aux liens mais sont précédées d&#39;un point d&#39;exclamation. Vous pouvez les retailler et y ajouter des classes CSS.",
	"content": " Les images ont une syntaxe similaire aux liens mais sont précédées d\u0026rsquo;un point d\u0026rsquo;exclamation\n![agence](https://github.com/vjeantet/vjeantet.fr/raw/master/static/images/sgthon/C.jpg)  Retailler une image Ajoutez les paramètres HTTP width et/ou height au lien image pour retailler l\u0026rsquo;image. Les valeurs sont des valeurs CSS (par défaut réglé sur auto).\n![Hackathon](https://github.com/vjeantet/vjeantet.fr/raw/master/static/images/sgthon/C.jpg?height=80px)  Ajouter des classes CSS Ajouter un paramètre HTTP classes au lien image pour ajouter des classes. shadow et border sont disponibles mais vous pourriez en définir d\u0026rsquo;autres.\n![agence](https://github.com/vjeantet/vjeantet.fr/raw/master/static/images/sgthon/C.jpg?classes=border,shadow)  "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/mermaid/",
	"title": "mermaid",
	"tags": [],
	"description": "mermaid est ici un raccourci-code pour intégrer des diagrammes de séquence, flowcharts ou Gantt ",
	"content": " mermaid est un éditeur pour créer des diagrammes. L\u0026rsquo;éditeur s\u0026rsquo;utilise sur docdock à l\u0026rsquo;aide d\u0026rsquo;un raccourci-code pour intégrer facilement de jolis diagrammes dans les pages web de votre documentation et/ou de votre projet.\nExemple de Flowchart   Afficher le code ...   {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Bords carrés] --\u0026gt;|Lien texte| B(Bords Rounds) B --\u0026gt; C{Décision} C --\u0026gt;|Un| D[Résultat un] C --\u0026gt;|Deux| E[Résultat deux] {{\u0026lt; /mermaid \u0026gt;}}    graph LR; A[Bords carrés] --|Lien texte| B(Bords Rounds) B -- C{Décision} C --|Un| D[Résultat un] C --|Deux| E[Résultat deux]  Exemples de diagramme séquence Transactions simples sequenceDiagram participant Barbara participant Christophe Barbara-Christophe: Salut Christophe, comment va ? Christophe--Barbara: Génial !  Diagramme à raffiner   Afficher le code ...   {{\u0026lt;mermaid\u0026gt;}} sequenceDiagram participant Alice participant Bruno Alice-\u0026gt;\u0026gt;Jean: Salut Jean, comment vas-tu ? loop Healthcheck Jean-\u0026gt;Jean: Je lutte contre l'hypocondrie end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}}    sequenceDiagram participant Alice participant Bruno Alice- Christophe: Salut Christophe, ça va ? loop santé mentale Christophe-Christophe: Lutte contre hypochondrie end Note right of Christophe: Les pensées rationnelles reprennent le dessus... Christophe-- Alice: Génial ! Christophe- Bruno: Et toi ? Bruno--Christophe: Vraiment super et toi! \nExemple diagramme de GANTT   Afficher le code ...   {{\u0026lt;mermaid\u0026gt;}} gantt dateFormat YYYY-MM-DD title Ajouter une fonctionnalité de diagramme de GANTT à mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}    gantt dateFormat YYYY-MM-DD title Ajouter une fonctionnalité de diagramme de GANTT à mermaid section section A Tâche terminée :done, des1, 2018-01-06,2018-01-08 Tâche en cours :active, des2, 2018-01-09, 3d Faire le ménage : des3, after des2, 5d Trouver autres idées : des4, after des3, 5d section Tâches critiques Tâches complétées dans la ligne critique :crit, done, 2018-01-06,24h Impl. parseur et json :crit, done, after des1, 2d Tests parseurs :crit, active, 3d Future tâche ligne critique :crit, 5d Tests rendu :2d Ajout mermaid :1d \n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/notice/",
	"title": "notice",
	"tags": [],
	"description": "Des avertissements pour vous aider à structurer votre page",
	"content": " Le raccourci-code notice présente 4 types d\u0026rsquo;avertissements pour vous aider à structurer votre page.\nNote {{% notice note %}} Une clause de non-responsabilité {{% /notice %}}  s\u0026rsquo;affiche comme\nUne clause de non-responsabilité\n Info {{% notice info %}} Une clause de non-responsabilité {{% /notice %}}  affichera\nUne clause de non-responsabilité\n Truc {{% notice tip %}} Tiens un truc {{% /notice %}}  s\u0026rsquo;affiche comme\nTiens un tip.. un truc\n Warning {{% notice warning %}} Un warning ou avertissement {{% /notice %}}  affichera\nUn warning ou avertissement\n "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-1/",
	"title": "page 1",
	"tags": [],
	"description": "Ceci est une démo de page enfant",
	"content": "Ceci est une démo de page enfant\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-1/children-1-1/",
	"title": "page 1-1",
	"tags": [],
	"description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod",
	"content": "Ceci est une démo de page enfant\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-1/children-1-1/children-1-1-1/",
	"title": "page 1-1-1",
	"tags": [],
	"description": "Ceci est une démo de page enfant",
	"content": "Ceci est une démo de page enfant\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/",
	"title": "page 1-1-1-1",
	"tags": [],
	"description": "Ceci est une démo de page enfant",
	"content": "Ceci est une démo de page enfant\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/",
	"title": "page 1-1-1-1-1",
	"tags": [],
	"description": "Ceci est une démo de page enfant",
	"content": "Ceci est une démo de page enfant\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-2/",
	"title": "page 2",
	"tags": [],
	"description": "",
	"content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-3/",
	"title": "page 3",
	"tags": [],
	"description": "Ceci est une démo de page enfant",
	"content": "Ceci est une démo de page enfant\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-4/",
	"title": "page 4",
	"tags": [],
	"description": "Ceci est une page enfant démo",
	"content": "Ceci est une page démo enfant, non affichée dans le menu\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/test/",
	"title": "page test",
	"tags": [],
	"description": "Ceci est une page test",
	"content": "Ceci est une page test enfant pour démo\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/children/children-2/test3/",
	"title": "page test 3",
	"tags": [],
	"description": "Ceci est une page test",
	"content": "Ceci est un 3ème test de démo de page enfant\n"
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/panel/",
	"title": "panel",
	"tags": [],
	"description": "Permet de mettre en évidence les informations ou de les mettre dans une boîte.",
	"content": " Le raccourci panel Vous permet de mettre en évidence les informations ou de les mettre dans une boîte. Il crée une boîte colorée entourant votre texte.  Usage    Paramètre Par défaut Description     header aucun Le titre du panneau. Si spécifié, ce titre sera affiché dans sa propre ligne d\u0026rsquo;en-tête.   footer aucun le pied de page du panneau. Si spécifié, ce texte sera affiché dans sa propre ligne   theme primary default,primary,info,success,warning,danger    Exemple basique Par défaut :\n{{% panel %}}ceci est un texte panel (dans un panneau){{% /panel %}}  ceci est un texte panel (dans un panneau)  Panneau avec Titre Ajoutez facilement un conteneu de titre à votre panneau avec le paramètre header. Vous pouve l\u0026rsquo;appliquer sur tous les thèmes.\n{{% panel theme=\u0026quot;danger\u0026quot; header=\u0026quot;Titre du Panneau\u0026quot; %}}ceci est un texte panel (dans un panneau){{% /panel %}}  Titre du Panneau ceci est un texte panel (dans un panneau)  {{% panel theme=\u0026quot;success\u0026quot; header=\u0026quot;Titre du Panneau\u0026quot; %}}ceci est un texte panel (dans un panneau){{% /panel %}}  Titre du Panneau ceci est un texte panel (dans un panneau)  Panneau avec pied de page Emballez un texte secondaire en pied de panneau.\n{{% panel footer=\u0026quot;pied de page du panneau\u0026quot; %}}Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.{{% /panel %}}  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n pied de page du panneau  Thèmes Thème Success ceci est un texte panel (dans un panneau)  Thème Default ceci est un texte panel (dans un panneau)  Thème Primary ceci est un texte panel (dans un panneau)  Thème Info ceci est un texte panel (dans un panneau)  Thème Warning ceci est un texte panel (dans un panneau)  Thème Danger ceci est un texte panel (dans un panneau)  "
},
{
	"uri": "https://docdock-hugo.netlify.com/shortcodes/revealjs/",
	"title": "revealjs",
	"tags": [],
	"description": "présente le contenu sous forme d&#39;une slide reveal.js",
	"content": " Page en chantier - à raffiner avec ce diaporama stratégique  Ce raccourci-code mettra en forme le markdown entouré pour le restituer avec reveal.js sur la runtime (côté-client)\nPour en savoir plus, regardez le repo github revealjs.\nUsage revealjs peut utiliser les paramètres nommés suivants :\n theme transition controls progress history center  Important Même si le contenu joint est du markdown, utilisez le \u0026lt; raccourci-code au lieu de la notation %  Mise en forme du contenu et délimiteurs de slides cliquez ici pour en savoir plus ici\nDémo  # Le matin ___ ## Me Lever - Désactiver le réveil - Sortir du lit ___ ## Petit-déjeuner - Manger des oeufs - Boire du thé --- # Dans la soirée ___ ## Dîner - Manger des spaghettis - Boire du Vin ___ ## Aller dormir - Aller au lit - Compter les moutons       function initSlides() { Reveal.initialize({ embedded : true, controls : false, center: true ,\thistory: false , progress: \"true\" , transition: \"concave\", dependencies: [ { src: '\\/revealjs\\/lib\\/js\\/classList.js\"', condition: function() { return !document.body.classList; } }, { src: '\\/revealjs\\/plugin\\/markdown\\/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '\\/revealjs\\/plugin\\/markdown\\/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '\\/revealjs\\/plugin\\/highlight\\/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '\\/revealjs\\/plugin\\/zoom-js\\/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '\\/revealjs\\/plugin\\/notes\\/notes.js', async: true, condition: function() { return !!document.body.classList; } } ] }); }   See it fullscreen var toto = document.getElementById('slideContent').innerHTML document.getElementById('slideFrame').contentWindow.document.write(document.getElementById('slideContent').innerHTML); document.getElementById('slideContent').remove(); document.addEventListener(\"DOMContentLoaded\",function(){ setTimeout(function () { document.getElementById('slideFrame').contentWindow.initSlides() ; }, 2000); }); function slideFullScreen() { document.open(); document.write(toto); document.close(); initSlides() }  "
}]